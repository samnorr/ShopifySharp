<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShopifySharp</name>
    </assembly>
    <members>
        <member name="T:ShopifySharp.Converters.FalseToNullConverter">
            <summary>
            A custom boolean converter that converts False to null and null to False.
            </summary>
        </member>
        <member name="T:ShopifySharp.Converters.InvalidDateToNullConverter">
            <summary>
            A custom converter that detects invalid dates and convert them to null instead of throwing an exception.
            In particular, FulfillmentEvent.EstimatedDeliveryAt has been observed to sometimes contain an invalid date
            e.g '0000-12-31T18:09:24-05:50', which is smaller than both DateTime.MinValue and DateTimeOffset.MinValue
            </summary>
        </member>
        <member name="T:ShopifySharp.Converters.NullableEnumConverter`1">
            <summary>
            A custom enum converter for all enums which returns the value
            as null when the value is null or does not exist.
            </summary>
        </member>
        <member name="T:ShopifySharp.Converters.NullOnErrorConverter">
            <summary>
            A custom converter that returns null if an error occurs while deserializing
            </summary>
        </member>
        <member name="T:ShopifySharp.AccessScope">
            <summary>
            An object representing an access scope
            </summary>
        </member>
        <member name="P:ShopifySharp.AccessScope.Handle">
            <summary>
            The scope's handle, such as "read_orders", "write_products", etc...
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Address1">
            <summary>
            The mailing address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Address2">
            <summary>
            An additional field for the mailing address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.City">
            <summary>
            The city.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Company">
            <summary>
            The company.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Country">
            <summary>
            The country.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.CountryCode">
            <summary>
            The two-letter country code corresponding to the country.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.CountryName">
            <summary>
            The normalized country name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Default">
            <summary>
            Indicates whether this address is the default address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.LastName">
            <summary>
            The last name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Latitude">
            <summary>
            The latitude. Auto-populated by Shopify on the order's Billing/Shipping address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Longitude">
            <summary>
            The longitude. Auto-populated by Shopify on the order's Billing/Shipping address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Phone">
            <summary>
            The phone number.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Province">
            <summary>
            The province or state name
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.ProvinceCode">
            <summary>
            The two-letter province or state code.
            </summary>
        </member>
        <member name="P:ShopifySharp.Address.Zip">
            <summary>
            The ZIP or postal code.
            </summary>
        </member>
        <member name="T:ShopifySharp.ApplicationCredit">
            <summary>
            An object representing Shopify's ApplicationCredit object, which can be used to offer credits for payments made via the Application Charge, Recurring Application Charge, and Usage Charge APIs.
            </summary>
        </member>
        <member name="P:ShopifySharp.ApplicationCredit.Description">
            <summary>
            The description of the application credit.
            </summary>
        </member>
        <member name="P:ShopifySharp.ApplicationCredit.Amount">
            <summary>
            The amount refunded by the application credit.
            </summary>
        </member>
        <member name="P:ShopifySharp.ApplicationCredit.Test">
            <summary>
            States whether or not the application credit is a test transaction. Valid values are true or null.
            </summary>
        </member>
        <member name="P:ShopifySharp.AppliedDiscount.Title">
            <summary>
            Title of the discount.
            </summary>
        </member>
        <member name="P:ShopifySharp.AppliedDiscount.Description">
            <summary>
            Reason for the discount.
            </summary>
        </member>
        <member name="P:ShopifySharp.AppliedDiscount.Value">
            <summary>
            he value of the discount. If the type of the discount is fixed_amount, then this is a fixed dollar amount. If the type is percentage, then this is the percentage.
            </summary>
        </member>
        <member name="P:ShopifySharp.AppliedDiscount.ValueType">
            <summary>
            The type of discount. Known values are "percentage" and "fixed_amount".
            </summary>
        </member>
        <member name="P:ShopifySharp.AppliedDiscount.Amount">
            <summary>
            The applied amount of the discount, based on the setting of value_type. 
            When ValueType is set to fixed_amount discount amount = quantity * value
            When ValueType is set to percentage discount amount = floor(price * quantity * value) / 100
            </summary>      
        </member>
        <member name="T:ShopifySharp.Article">
            <summary>
            An object representing a Shopify blog article.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.Author">
            <summary>
            The name of the author of this article
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.BlogId">
            <summary>
            A unique numeric identifier for the blog containing the article.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.BodyHtml">
            <summary>
            The text of the body of the article, complete with HTML markup.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.CreatedAt">
            <summary>
            The date and time when the article was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.Handle">
            <summary>
            A human-friendly unique string for an article automatically generated from its title. It is used in the article's URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.Image">
            <summary>
            The article image.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.Published">
            <summary>
            States whether or not the article is visible. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.PublishedAt">
            <summary>
            The date and time when the article was published. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.SummaryHtml">
            <summary>
            The text of the summary of the article, complete with HTML markup.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.Tags">
            <summary>
            Tags are additional short descriptors formatted as a string of comma-separated values. For example, if an article has three tags: tag1, tag2, tag3.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.TemplateSuffix">
            <summary>
            States the name of the template an article is using if it is using an alternate template. If an article is using the default article.liquid template, the value returned is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.Title">
            <summary>
            The title of the article.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.UpdatedAt">
            <summary>
            The date and time when the article was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.Article.UserId">
            <summary>
            A unique numeric identifier for the author of the article.
            </summary>
        </member>
        <member name="T:ShopifySharp.ArticleImage">
            <summary>
            Represents a Shopify article's image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ArticleImage.Attachment">
            <summary>
            A base64 image string only used when creating an image. It will be converted to the <see cref="P:ShopifySharp.ArticleImage.Src"/> property.
            </summary>
        </member>
        <member name="P:ShopifySharp.ArticleImage.CreatedAt">
            <summary>
            The date and time the image was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ArticleImage.Src">
            <summary>
            The image's src URL.
            </summary>
        </member>
        <member name="T:ShopifySharp.Asset">
            <summary>
            An object representing a Shopify asset. Assets do not have ids, but rather keys, and are associated with specific themes.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.Attachment">
            <summary>
            An asset attached to a store's theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.ContentType">
            <summary>
            MIME representation of the content, consisting of the type and subtype of the asset, 
            e.g. "image/gif"
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.CreatedAt">
            <summary>
            The date and time when the asset was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.Key">
            <summary>
            The path to the asset within a shop, prefixed with the asset's 'bucket' type,
             e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.PublicUrl">
            <summary>
            The public facing URL of the asset.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.Size">
            <summary>
            The asset size in bytes.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.SourceKey">
            <summary>
            When set in an asset and used in <see cref="M:ShopifySharp.AssetService.CreateOrUpdateAsync(System.Int64,ShopifySharp.Asset)"/>, 
            a new asset will be created and copied from an asset with the key matching this source key.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.Src">
            <summary>
            Specifies the location of an asset.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.ThemeId">
            <summary>
            A unique numeric identifier for the theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.UpdatedAt">
            <summary>
            The date and time when an asset was last updated. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Asset.Value">
            <summary>
            The asset that you are adding.
            </summary>
        </member>
        <member name="T:ShopifySharp.Blog">
            <summary>
            Represents a Blog � not a blog post � on a merchant's Shopify store.
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.Commentable">
            <summary>
            Indicates whether readers can post comments to the blog and if comments are moderated or not. Possible values are:
            "no" (default): Readers cannot post comments to blog articles.
            "moderate": Readers can post comments to blog articles, but comments must be moderated before they appear.
            "yes": Readers can post comments to blog articles without moderation.
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.CreatedAt">
            <summary>
            The date and time when the blog was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.Feedburner">
            <summary>
            Feedburner is a web feed management provider and can be enabled to provide custom RSS feeds for Shopify bloggers. This property will default to blank or "null" unless feedburner is enabled through the shop admin.
            </summary>
            <remarks>
            Shopify does not document the value type for this property.
            </remarks>
        </member>
        <member name="P:ShopifySharp.Blog.FeedburnerLocation">
            <summary>
            URL to the feedburner location for blogs that have enabled feedburner through their store admin.
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.Handle">
            <summary>
            A human-friendly unique string for a blog automatically generated from its title. This handle is used by the Liquid templating language to refer to the blog.
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.Tags">
            <summary>
            Tags are additional short descriptors formatted as a string of comma-separated values. For example, if an article has three tags: tag1, tag2, tag3.
            </summary>
            <remarks>
            Shopify seems to ignore these tags when creating or updating a blog.
            </remarks>
        </member>
        <member name="P:ShopifySharp.Blog.TemplateSuffix">
            <summary>
            States the name of the template a blog is using if it is using an alternate template. If a blog is using the default blog.liquid template, the value returned is "null".
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.Title">
            <summary>
            The title of the blog.
            </summary>
        </member>
        <member name="P:ShopifySharp.Blog.UpdatedAt">
            <summary>
            The date and time when changes were last made to the blog's properties. Note that this is not updated when creating, modifying or deleting articles in the blog.
            </summary>
        </member>
        <member name="T:ShopifySharp.Carrier">
            <summary>
            An object representing a Shopify CarrierService.
            </summary>
        </member>
        <member name="P:ShopifySharp.Carrier.Active">
            <summary>
            States whether or not this carrier service is active. Valid values are "true" and "false".
            </summary>
        </member>
        <member name="P:ShopifySharp.Carrier.CallbackUrl">
            <summary>
            States the URL endpoint that shopify needs to retrieve shipping rates. This must be a public URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.Carrier.CarrierServiceType">
            <summary>
            Distinguishes between api or legacy carrier services.
            </summary>
        </member>
        <member name="P:ShopifySharp.Carrier.Name">
            <summary>
            The name of the shipping service as seen by merchants and their customers.
            </summary>
        </member>
        <member name="P:ShopifySharp.Carrier.ServiceDiscovery">
            <summary>
            States if merchants are able to send dummy data to your service through the Shopify admin
            to see shipping rate examples. Valid values are "true" and "false".
            </summary>
        </member>
        <member name="P:ShopifySharp.Carrier.Format">
            <summary>
            The format of the data returned by the URL endpoint. Valid values are "json" and "xml".
            If a format is not specified, it will default to json.
            </summary>
        </member>
        <member name="P:ShopifySharp.CarrierShippingRateProvider.CarrierServiceId">
            <summary>
            A Carrier Service (also known as a Carrier Calculated Service or Shipping Service) provides real-time shipping rates to Shopify. Some common carrier services include: Canada Post, FedEx, UPS, and USPS. Note that the term "carrier" is often used interchangeably with the terms "shipping company" and "rate provider."
            </summary>
        </member>
        <member name="P:ShopifySharp.CarrierShippingRateProvider.FlatModifier">
            <summary>
            Rate adjustments - Flat fee
            </summary>
        </member>
        <member name="P:ShopifySharp.CarrierShippingRateProvider.PercentModifier">
            <summary>
            Rate adjustments - percentage
            </summary>
        </member>
        <member name="P:ShopifySharp.CarrierShippingRateProvider.ShippingZoneId">
            <summary>
            Shipping zone id
            </summary>
        </member>
        <member name="T:ShopifySharp.Charge">
            <summary>
            An object representing an application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.Charge.ConfirmationUrl">
            <summary>
            The URL that the customer should be sent to, to accept or decline the application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.Charge.CreatedAt">
            <summary>
            The date and time when the application charge was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Charge.Name">
            <summary>
            The name of the application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.Charge.Price">
            <summary>
            The price of the application charge.
            </summary>
            <remarks>Shopify returns this as a string, but JSON.net should be able to convert it to a decimal.</remarks>
        </member>
        <member name="P:ShopifySharp.Charge.ReturnUrl">
            <summary>
            The URL the customer is sent to once they accept/decline a charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.Charge.Status">
            <summary>
            The status of the charged. Known values are 'pending', 'accepted', 'active', 'cancelled', 'declined' and 'expired'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Charge.Test">
            <summary>
            States whether or not the application charge is a test transaction.
            </summary>
            <remarks>Valid values are 'true' or null. Needs a special converter to convert null to false and vice-versa.</remarks>
        </member>
        <member name="P:ShopifySharp.Charge.UpdatedAt">
            <summary>
            The date and time when the recurring application charge was last updated.
            </summary>
        </member>
        <member name="T:ShopifySharp.Checkout">
            <summary>
            An entity representing a Shopify product.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.AbandonedCheckoutUrl">
            <summary>
            The full recovery URL to be sent to a customer to recover their abandoned checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.BillingAddress">
            <summary>
            The mailing address associated with the payment method.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.BuyerAcceptsMarketing">
            <summary>
            Indicates whether or not the person who placed the order would like to receive email 
            updates from the shop. This is set when checking the "I want to receive occasional 
            emails about new products, promotions and other news" checkbox during checkout. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.CartToken">
            <summary>
            Unique identifier for a particular cart that is attached to a particular order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.ClosedAt">
            <summary>
            The date and time when the abandoned cart was completed. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.CompletedAt">
            <summary>
            The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.CreatedAt">
            <summary>
            The date and time when the abandoned cart was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the payment.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Customer">
            <summary>
            Information about the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.CustomerLocale">
            <summary>
            The two or three-letter language code, optionally followed by a region modifier. Example values: en, en-CA. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.DeviceId">
            <summary>
            The ID of the Shopify POS device that created the checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.DiscountCodes">
            <summary>
            Applicable discount codes that can be applied to the order. If no codes exist the value will default to blank. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Email">
            <summary>
            The customer's email address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Gateway">
            <summary>
            The payment gateway used.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.LandingSite">
            <summary>
            The URL for the page where the buyer landed when entering the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.LineItems">
            <summary>
            A list of line item objects, each one containing information about an item in the order. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.LocationId">
            <summary>
            The ID of the physical location where the checkout was processed.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Note">
            <summary>
            The text of an optional note that a shop owner can attach to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Phone">
            <summary>
            The customer's phone number for receiving SMS notifications.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.PresentmentCurrency">
            <summary>
            The three-letter code (ISO 4217 format) of the currency that the customer used at checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.ReferringSite">
            <summary>
            The website that the customer clicked on to come to the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.ShippingAddress">
            <summary>
            The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require one.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.ShippingLines">
            <summary>
            An array of shipping line objects, each of which details the shipping methods used.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.SourceName">
            <summary>
            Where the checkout originated. Known values are: "web", "pos", "iphone", and "android"
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.SubtotalPrice">
            <summary>
            Price of the order before shipping and taxes
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TaxLines">
            <summary>
            An array of tax line objects, each of which details the taxes applicable to the order. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TaxesIncluded">
            <summary>
            Whether taxes are included in the price.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.Token">
            <summary>
            Unique identifier for a particular order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TotalDiscounts">
            <summary>
            The total amount of the discounts to be applied to the price of the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TotalLineItemsPrice">
            <summary>
            The sum of all the prices of all the items in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TotalPrice">
            <summary>
            The sum of all the prices of all the items in the order, taxes and discounts included.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TotalTax">
            <summary>
            The sum of all the taxes applied to the line items in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.TotalWeight">
            <summary>
            The sum of all the weights of the line items in the order, in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.UpdatedAt">
            <summary>
            The date and time when the abandoned cart was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Checkout.UserId">
            <summary>
            The ID of the user who created the checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.CheckoutLineItem.Key">
            <summary>
            The key for the line item.
            </summary>
        </member>
        <member name="P:ShopifySharp.CheckoutLineItem.OriginLocationId">
            <summary>
            The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
            </summary>
        </member>
        <member name="P:ShopifySharp.CheckoutShippingRate.DeliveryRange">
            <summary>
            As of 2019-01-21, the type of this property is unknown. In Shopify's documentation, it only appears as a null value.
            </summary>
        </member>
        <member name="P:ShopifySharp.ClientDetails.AcceptLanguage">
            <summary>
            Shopify does not offer documentation for this field.
            </summary>
        </member>
        <member name="P:ShopifySharp.ClientDetails.BrowserHeight">
            <summary>
            The browser screen height in pixels, if available.
            </summary>
        </member>
        <member name="P:ShopifySharp.ClientDetails.BrowserIp">
            <summary>
            The browser IP address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ClientDetails.BrowserWidth">
            <summary>
            The browser screen width in pixels, if available.
            </summary>
        </member>
        <member name="P:ShopifySharp.ClientDetails.SessionHash">
            <summary>
            A hash of the session.
            </summary>
        </member>
        <member name="P:ShopifySharp.ClientDetails.UserAgent">
            <summary>
            The browser's user agent string.
            </summary>
        </member>
        <member name="T:ShopifySharp.Collect">
            <summary>
            An object representing a Shopify collect.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.CollectionId">
            <summary>
            The id of the custom collection containing the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.ProductId">
            <summary>
            The unique numeric identifier for the product in the custom collection.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.Featured">
            <summary>
            States whether or not the collect is featured.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.CreatedAt">
            <summary>
            The date and time when the collect was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.UpdatedAt">
            <summary>
            The date and time when the collect was last updated. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.Position">
            <summary>
            A number specifying the manually sorted position of this product in a custom collection. The first position is 1. This value only applies when the custom collection is viewed using the Manual sort order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Collect.SortValue">
            <summary>
            This is the same value as position but padded with leading zeroes to make it alphanumeric-sortable.
            </summary>
        </member>
        <member name="P:ShopifySharp.Country.Name">
            <summary>
            The full name of the country, in English.
            </summary>
        </member>
        <member name="P:ShopifySharp.Country.Tax">
            <summary>
            The tax value in decimal format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ShopifySharp.Country.Code">
            <summary>
            The ISO 3166-1 alpha-2 two-letter country code for the country. The code for a given country will be the same as the code for the same country in another shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Country.TaxName">
            <summary>
            The name of the tax as it is referred to in the applicable province/state. For example, in Ontario, Canada the tax is referred to as HST.
            </summary>
        </member>
        <member name="P:ShopifySharp.Country.Provinces">
            <summary>
            The sub-regions of a country. The term provinces also encompasses states.
            </summary>
        </member>
        <member name="T:ShopifySharp.CustomCollection">
            <summary>
            An entity representing a Shopify Custom Collection Object.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.BodyHtml">
            <summary>
            The description of the Custom collection, complete with HTML markup. Many templates display this on their Custom collection page.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.Handle">
            <summary>
            A human-friendly unique string for the Custom collection automatically generated from its title. This is used in shop themes by the Liquid templating language to refer to the Custom collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.Image">
            <summary>
            The collection image.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.Published">
            <summary>
            Whether the collection is published or not.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.PublishedAt">
            <summary>
            This can have two different types of values, depending on whether the Custom collection has been published (i.e., made visible to customers):
            If the Custom collection is published, this value is the date and time when it was published.The API returns this value in ISO 8601 format.
            If the Custom collection is hidden (i.e., not published), this value is null. Changing a Custom collection's status from published to hidden changes its published_at property to null.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.PublishedScope">
            <summary>
            The sales channels in which the Custom collection is visible.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.SortOrder">
            <summary>
            The order in which products in the Custom collection appear
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.TemplateSuffix">
            <summary>
            The suffix of the template you are using. By default, the original template is called product.liquid, without any suffix. Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.Title">
            <summary>
            The name of the Custom collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.UpdatedAt">
            <summary>
            The date and time when the Custom collection was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollection.Collects">
            <summary>
            The collection of collects associated to this custom collection
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.CustomCollection.Metafields" -->
        <member name="T:ShopifySharp.CustomCollectionImage">
            <summary>
            Represents the image for a <see cref="T:ShopifySharp.CustomCollection"/>
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollectionImage.Attachment">
            <summary>
            An image attached to a shop's theme returned as Base64-encoded binary data.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollectionImage.Src">
            <summary>
            Source URL that specifies the location of the image.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollectionImage.Alt">
            <summary>
            Alternative text that describes the collection image.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollectionImage.Created_At">
            <summary>
            The date the image was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollectionImage.Width">
            <summary>
            Width of the image in pixels.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomCollectionImage.Height">
            <summary>
            Height of the image in pixels.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.AcceptsMarketing">
            <summary>
            Indicates whether the customer has consented to be sent marketing material via email.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.Addresses">
            <summary>
            A list of addresses for the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.CreatedAt">
            <summary>
            The date and time when the customer was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.Currency">
            <summary>
            Currency used for customer's last order
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.DefaultAddress">
            <summary>
            The default address for the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.Email">
            <summary>
            The email address of the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.FirstName">
            <summary>
            The customer's first name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.MultipassIdentifier">
            <summary>
            The customer's identifier used with Multipass login
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.LastName">
            <summary>
            The customer's last name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.LastOrderId">
            <summary>
            The id of the customer's last order.
            </summary>
            <remarks>Property can be null or longer than max int32 value. Set to nullable long instead.</remarks>
        </member>
        <member name="P:ShopifySharp.Customer.LastOrderName">
            <summary>
            The name of the customer's last order. This is directly related to the Order's name field.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.Note">
            <summary>
            A note about the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.OrdersCount">
            <summary>
            The number of orders associated with this customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.Phone">
            <summary>
            The phone number for the customer. Valid formats can be of different types, for example:
            
            6135551212
            
            +16135551212
            
            555-1212
            
            (613)555-1212
            
            +1 613-555-1212
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.State">
            <summary>
            The state of the customer in a shop. Valid values are 'disabled', 'decline', 'invited' and 'enabled'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.Tags">
            <summary>
            Tags are additional short descriptors formatted as a string of comma-separated values.
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.TaxExempt">
            <summary>
            Indicates whether the customer should be charged taxes when placing orders. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.TotalSpent">
            <summary>
            The total amount of money that the customer has spent at the shop.
            </summary>
            <remarks>The Shopify API actually returns this value as a string, but Json.Net can automatically convert to decimal.</remarks>
        </member>
        <member name="P:ShopifySharp.Customer.UpdatedAt">
            <summary>
            The date and time when the customer information was updated. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Customer.VerifiedEmail">
            <summary>
            States whether or not the email address has been verified.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.Customer.Metafields" -->
        <member name="T:ShopifySharp.CustomerDataRequestWebhook">
            <summary>
            Sent via the GDPR customers/data_request webhook, indicating that a customer has requested all data that you may have stored related to them. It's your responsibility to provide this data to the store owner directly. 
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerDataRequestWebhook.Customer">
            <summary>
            The customer who has been redacted.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerDataRequestWebhook.OrdersRequested">
            <summary>
            A list of order ids placed by the customer that they are requesting information on.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerInvite.To">
            <summary>
            The email address of the customer to be invited
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerInvite.From">
            <summary>
            The sender of the email
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerInvite.Subject">
            <summary>
            the subject
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerInvite.CustomMessage">
            <summary>
            a custom message to include
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerInvite.Bcc">
            <summary>
            blind copy addresses
            </summary>
        </member>
        <member name="T:ShopifySharp.CustomerRedactedWebhook">
            <summary>
            Sent via the GDPR customers/redact webhook, indicating that you should purge the customer's data from your systems.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerRedactedWebhook.Customer">
            <summary>
            The customer who has been redacted.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerRedactedWebhook.OrdersToRedact">
            <summary>
            A list of order ids placed by the customer that must also be purged from your systems.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerSavedSearch.Name">
            <summary>
            The name given by the shop owner to the customer saved search
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerSavedSearch.Query">
            <summary>
            The set of conditions that determines which customers will be returned by the saved search
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerSavedSearch.CreatedAt">
            <summary>
            The date and time when the customer saved search was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerSavedSearch.UpdatedAt">
            <summary>
            The date and time when the customer saved search was updated. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountAllocation.Amount">
            <summary>
            The discount amount allocated to the line (not sure why it is a string)
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountAllocation.DiscountApplicationIndex">
            <summary>
            The index of the associated discount application in the order's discount_applications list.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountAllocation.AmountSet">
            <summary>
            The discount amount allocated to the line item in shop and presentment currencies.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.Type">
            <summary>
            The discount application type. Valid values:
            manual: The discount was manually applied by the merchant(for example, by using an app or creating a draft order).
            script: The discount was applied by a Shopify Script.
            discount_code: The discount was applied by a discount code.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.Code">
            <summary>
            The discount code that was used to apply the discount. Available only for discount code applications.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.Title">
            <summary>
            The title of the discount application, as defined by the merchant. Available only for manual discount applications.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.Description">
            <summary>
            The description of the discount application, as defined by the merchant or the Shopify Script. Available only for manual and script discount applications.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.Value">
            <summary>
            The value of the discount application as a decimal. This represents the intention of the discount application.
            For example, if the intent was to apply a 20% discount, then the value will be 20.0.
            If the intent was to apply a $15 discount, then the value will be 15.0.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.ValueType">
            <summary>
            The type of the value. Valid values:
            fixed_amount: A fixed amount discount value in the currency of the order.
            percentage: A percentage discount value.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.AllocationMethod">
            <summary>
            The method by which the discount application value has been allocated to entitled lines. Valid values:
            across: The value is spread across all entitled lines.
            each: The value is applied onto every entitled line.
            one: The value is applied onto a single line.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.TargetSelection">
            <summary>
            The lines on the order, of the type defined by target_type, that the discount is allocated over. Valid values:
            all: The discount is allocated onto all lines,
            entitled: The discount is allocated only onto lines it is entitled for.
            explicit: The discount is allocated onto explicitly selected lines.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountApplication.TargetType">
            <summary>
            The type of line on the order that the discount is applicable on. Valid values:
            line_item: The discount applies to line items.
            shipping_line: The discount applies to shipping lines.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountCode.Amount">
            <summary>
            The amount of the discount.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountCode.Code">
            <summary>
            The discount code.
            </summary>
        </member>
        <member name="P:ShopifySharp.DiscountCode.Type">
            <summary>
            The type of discount. Known values are 'percentage', 'shipping', 'fixed_amount' and 'none'.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftLineItem.Custom">
            <summary>
             Indicates if this is a product variant line item, or a custom line item. If set to true indicates a custom line item. If set to false indicates a product variant line item. This is a read only field.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftLineItem.AppliedDiscount">
            <summary>
            Discount which will be applied to the line item or the overall order. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.OrderId">
            <summary>
            The unique numeric identifier for the order associated to the draft order, once created.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Name">
            <summary>
            Name of the draft order.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Customer">
            <summary>
            Customer associated with the draft order. Customer associated with the draft order. Used to load/remove the associated customer with customer id. When a customer is loaded, the customer’s email address is also assocaited.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.ShippingAddress">
            <summary>
            The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require one.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.BillingAddress">
            <summary>
            The mailing address associated with the payment method. This address is an optional field that will not be available on orders that do not require one. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Note">
            <summary>
            The text of an optional note that a shop owner can attach to the draft order.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.NoteAttributes">
            <summary>
            Extra information that is added to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Email">
            <summary>
            The customer's email address.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the payment.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.InvoiceSentAt">
            <summary>
            This auto-generated property is the date and time when the invoice was emailed to the customer, in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.InvoiceUrl">
            <summary>
            The URL for the invoice.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.LineItems">
            <summary>
            Product variant line item or custom line item associated to the draft order. Each draft order must include at least one line_item.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.ShippingLine">
            <summary>
            Details the shipping method used.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Tags">
            <summary>
            Tags are additional short descriptors, commonly used for filtering and searching, formatted as a string of comma-separated values.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.TaxExempt">
            <summary>
            Sets whether or not taxes are exempt for the draft order. If this field is set to false, then Shopify will refer to the taxable field for each line_item. If a customer is applied to the draft order, then Shopify will use the customer's tax_exempt field instead. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.TaxLines">
            <summary>
            An array of tax_line objects, each of which details the total taxes applicable to the order. When creating an order through the API, tax lines may be specified on the order or the line items but not both. Tax lines specified on the order are split on the taxable line items in the created order. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.AppliedDiscount">
            <summary>
            Discount which will be applied to the line item or the overall order. A draft order line_item can have one discount. A draft order can have one order-level discount.
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.TaxesIncluded">
            <summary>
            States whether or not taxes are included in the order subtotal. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.TotalTax">
            <summary>
            The sum of all the taxes applied to the order (must be positive). 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.SubtotalPrice">
            <summary>
            Price of the order before shipping and taxes
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.TotalPrice">
            <summary>
            The sum of all the prices of all the items in the order, taxes and discounts included (must be positive).
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.CompletedAt">
            <summary>
            Date at which order is created and the draft order changes to completed status. The API returns this value in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.CreatedAt">
            <summary>
            This auto-generated property is the date and time when the draft order was created in Shopify, in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.UpdatedAt">
            <summary>
            The date and time when the order was last modified. The API returns this value in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:ShopifySharp.DraftOrder.Status">
            <summary>
            Once a draft order is set to status completed the only further draft order modifications that can be made are adding tags or metafields. No other draft order actions are permitted.
            Known values are "open", "invoice_sent", and "completed".
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.DraftOrder.Metafields" -->
        <member name="T:ShopifySharp.Event">
            <summary>
            An object representing a Shopify event.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.Arguments">
            <summary>
            Refers to a certain event and its resources.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.Body">
            <summary>
            A text field containing information about the event.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.CreatedAt">
            <summary>
            The date and time when the event was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.Path">
            <summary>
            A relative URL to the resource the event is for (may be null)
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.Message">
            <summary>
            Human readable text that describes the event (may contain limited HTML formatting).
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.SubjectId">
            <summary>
            The id of the resource that generated the event.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.SubjectType">
            <summary>
            The type of the resource that generated the event.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.Verb">
            <summary>
            The type of event that took place.
            </summary>
        </member>
        <member name="P:ShopifySharp.Event.Author">
            <summary>
            Undocumented by Shopify
            </summary>
        </member>
        <member name="T:ShopifySharp.Fulfillment">
            <summary>
            An object representing a Shopify fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.CreatedAt">
            <summary>
            The date and time when the fulfillment was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.LineItems">
            <summary>
            A historical record of each item in the fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.OrderId">
            <summary>
            The unique numeric identifier for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.Receipt">
            <summary>
            A textfield with information about the receipt.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.Status">
            <summary>
            The status of the fulfillment. Valid values are 'pending', 'open', 'success', 'cancelled',
            'error' and 'failure'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.LocationId">
            <summary>
            The unique identifier of the location that the fulfillment should be processed for.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.Email">
            <summary>
            This property is undocumented by Shopify. It appears to be the customer's email address
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.NotifyCustomer">
            <summary>
            A flag indicating whether the customer should be notified. If set to true, an email will be
            sent when the fulfillment is created or updated. The default value is false for fulfillments
            on any orders created initially through the API. For all other orders, the default value is true.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.Destination">
            <summary>
            This property is undocumented by Shopify. It appears to be the shipping address of the order
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.TrackingCompany">
            <summary>
            The name of the shipping company.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.TrackingNumber">
            <summary>
            The shipping number, provided by the shipping company. If multiple tracking numbers
            exist (<see cref="P:ShopifySharp.Fulfillment.TrackingNumbers"/>), returns the first number.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.TrackingNumbers">
            <summary>
            A list of shipping numbers, provided by the shipping company. May be null.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.TrackingUrl">
            <summary>
            The tracking url, provided by the shipping company. May be null. If multiple tracking URLs
            exist (<see cref="P:ShopifySharp.Fulfillment.TrackingUrls"/>), returns the first URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.TrackingUrls">
            <summary>
            An array of one or more tracking urls, provided by the shipping company. May be null.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.UpdatedAt">
            <summary>
            The date and time when the fulfillment was last modified.
            </summary>
        </member>
        <member name="P:ShopifySharp.Fulfillment.VariantInventoryManagement">
            <summary>
            States the name of the inventory management service.
            </summary>
        </member>
        <member name="T:ShopifySharp.FulfillmentEvent">
            <summary>
            An object representing a Shopify fulfillment event.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.CreatedAt">
            <summary>
            The date and time when the fulfillment event was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.OrderId">
            <summary>
            The unique numeric identifier for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.ShopId">
            <summary>
            The unique numeric identifier for the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.FulfillmentId">
            <summary>
            The unique numeric identifier for the fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Status">
            <summary>
            The status of the fulfillment event. Valid values are 'confirmed', 'in_transit', 
            'out_for_delivery', 'delivered' and 'failure'
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.HappenedAt">
            <summary>
            The date and time when the fulfillment event occurred
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Message">
            <summary>
            An arbitrary message describing the status.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.City">
            <summary>
            The city in which the fulfillment event occurred.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Province">
            <summary>
            The province in which the fulfillment event occurred.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Zip">
            <summary>
            The zip code in the location in which the fulfillment event occurred.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Country">
            <summary>
            The country in which the fulfillment event occurred.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Address1">
            <summary>
            The fulfillment event's street address.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Latitude">
            <summary>
            Geographic coordinate specifying the north/south location of a fulfillment event.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.Longitude">
            <summary>
            Geographic coordinate specifying the east/west location of a fulfillment event.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.EstimatedDeliveryAt">
            <summary>
            The estimated date of delivery.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentEvent.UpdatedAt">
            <summary>
            The date and time when the fulfillment event was last modified.
            </summary>
        </member>
        <member name="T:ShopifySharp.FulfillmentServiceEntity">
            <summary>
            An object representing a Shopify fulfillment service.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.Name">
            <summary>
            The name of the fulfillment service as seen by merchants and their customers.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.CallbackUrl">
            <summary>
            States the URL endpoint that Shopify needs to retrieve inventory and tracking updates.
            This field is necessary if either inventory_management or tracking_support is set to "true".
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.Format">
            <summary>
            Specifies the format of the API output. Valid values are "json" and "xml".
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.Handle">
            <summary>
            A human-friendly unique string for the fulfillment service generated from its title.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.InventoryManagement">
            <summary>
            States if the fulfillment service tracks product inventory and provides updates to Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.LocationId">
            <summary>
            The unique identifier of the location tied to the fulfillment service
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.ProviderId">
            <summary>
            A unique identifier for the fulfillment service provider.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.RequiresShippingMethod">
            <summary>
            States if the fulfillment service requires products to be physically shipped.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.TrackingSupport">
            <summary>
            States if the fulfillment service provides tracking numbers for packages.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.Email">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.IncludePendingStock">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.FulfillmentServiceEntity.ServiceName">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.Balance">
            <summary>
            Returns the amount of money remaining on the gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.CreatedAt">
            <summary>
            The date and time when the gift card was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.UpdatedAt">
            <summary>
            The date and time when the gift card was updated. 
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.InitialValue">
            <summary>
            Returns the initial amount of money on the gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.DisabledAt">
            <summary>
            The date and time when the gift card was disabled. 
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.ExpiresOn">
            <summary>
            The date and time when the gift card will expire. 
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.LineItemId">
            <summary>
            A unique numeric identifier of the line_item that caused the creation of this gift card (if it was created by an order).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.ApiClientId">
            <summary>
            A unique numeric identifier of the application that issued the gift card (if it was issued by an application).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.UserId">
            <summary>
            A unique numeric identifier of the user that issued the gift card (if it was issued by a user).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.CustomerId">
            <summary>
            The id of a customer who is associated with this gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.Note">
            <summary>
            The text of an optional note that a shop owner can attach to the gift card. Not visible to merchants.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.TemplateSuffix">
            <summary>
            When specified, the gift card will be rendered using gift_card.SUFFIX.liquid instead of gift_card.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.LastCharacters">
            <summary>
            The last four characters of the gift card code. Because gift cards are alternate payment methods, the full code cannot be retrieved.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.OrderId">
            <summary>
            A unique numeric identifier of the order that caused the creation of this gift card (if it was created by an order).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCard.Code">
            <summary>
            Thethe gift card code. Only for Creation
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.GiftCardId">
            <summary>
            A unique numeric identifier for gift card the adjustment is applied onto.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.Number">
            <summary>
            A numeric sequence number for this adjustment with respect to the gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.Amount">
            <summary>
            A number (signed) representing the value of the adjustment.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.Note">
            <summary>
            The text of an optional note that can be attached to the adjustment. 
            This value is not visible to customers.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.RemoteTransactionRef">
            <summary>
            The text of an optional reference note that can be attached to the adjustment. 
            This value is not visible to customers.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.RemoteTransactionUrl">
            <summary>
            An optional reference URL that can be attached to the adjustment. 
            This value is not visible to customers.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.ApiClientId">
            <summary>
            A unique numeric identifier of the application that issued the adjustment (if it was issued by an application).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.UserId">
            <summary>
            A unique numeric identifier of the user that issued the adjustment (if it was issued by a user).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.OrderTransactionId">
            <summary>
            A unique numeric identifier of the order transaction that issued the adjustment 
            (if it was caused by an application of a gift card to an order).
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.CreatedAt">
            <summary>
            The date and time when the adjustment was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.UpdatedAt">
            <summary>
            The date and time when the gift card adjustment was updated in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.GiftCardAdjustment.ProcessedAt">
            <summary>
            The date and time when the adjustment was imported, in ISO 8601 format. 
            This value can be set to dates in the past when importing from other systems. 
            If no value is provided, it will be auto-generated.
            </summary>
        </member>
        <member name="P:ShopifySharp.HSCode.CountryCode">
            <summary>
            The two-digit code for the country where the inventory item was made.
            </summary>
        </member>
        <member name="P:ShopifySharp.HSCode.HarmonizedSystemCode">
            <summary>
            The general Harmonized System (HS) code for the inventory item. Used if a country-specific HS code is not available.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.SKU">
            <summary>
            The unique SKU (Stock Keeping Unit) of the inventory item.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.Tracked">
            <summary>
            Whether the inventory item is tracked. If true, then inventory quantity changes are tracked by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.Cost">
            <summary>
            The unit cost of the inventory item.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.CountryCodeOfOrigin">
            <summary>
            The two-digit code for the country where the inventory item was made.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.ProvinceCodeOfOrigin">
            <summary>
            The two-digit code for the province where the inventory item was made. Used only if the shipping provider for the inventory item is Canada Post.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.HarmonizedSystemCode">
            <summary>
            The general Harmonized System (HS) code for the inventory item. Used if a country-specific HS code is not available.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.CountryHarmonizedSystemCodes">
            <summary>
            An array of country-specific Harmonized System (HS) codes for the item. Used to determine duties when shipping the inventory item to certain countries.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.RequiresShipping">
            <summary>
            Whether a customer needs to provide a shipping address when placing an order containing the inventory item.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.CreatedAt">
            <summary>
            The date and time when the product variant was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryItem.UpdatedAt">
            <summary>
            The date and time when the product variant was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevel.InventoryItemId">
            <summary>
            The unique identifier of the inventory item that the inventory level belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevel.LocationId">
            <summary>
            The unique identifier of the location that the inventory level belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevel.Available">
            <summary>
            The quantity of inventory items available for sale. Returns null if the inventory item is not tracked.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevel.UpdatedAt">
            <summary>
            The date and time when the inventory level was last modified.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevelAdjust.InventoryItemId">
            <summary>
            The unique identifier of the inventory item that the inventory level belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevelAdjust.LocationId">
            <summary>
            The unique identifier of the location that the inventory level belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.InventoryLevelAdjust.AvailableAdjustment">
            <summary>
            The quantity adjust of inventory items.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.FulfillableQuantity">
            <summary>
            The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.FulfillmentService">
            <summary>
            Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.FulfillmentStatus">
            <summary>
            The fulfillment status of this line item. Known values are 'fulfilled', 'null' and 'partial'.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Grams">
            <summary>
            The weight of the item in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Price">
            <summary>
            The price of the item before discounts have been applied.
            </summary>
            <remarks>Shopify returns this value as a string.</remarks>
        </member>
        <member name="P:ShopifySharp.LineItem.ProductId">
            <summary>
            The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Quantity">
            <summary>
            The number of products that were purchased.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.RequiresShipping">
            <summary>
            States whether or not the fulfillment requires shipping.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.SKU">
            <summary>
            A unique identifier of the item in the fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Title">
            <summary>
            The title of the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.VariantId">
            <summary>
            The id of the product variant. Can be null if the product purchased is not a variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.VariantTitle">
            <summary>
            The title of the product variant. Can be null if the product purchased is not a variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Name">
            <summary>
            The name of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Vendor">
            <summary>
            The name of the supplier of the item.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.GiftCard">
            <summary>
            States whether the order used a gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Taxable">
            <summary>
            States whether or not the product was taxable.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.TaxLines">
            <summary>
            An array of <see cref="T:ShopifySharp.TaxLine"/> objects, each of which details the taxes applicable to this <see cref="T:ShopifySharp.LineItem"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.TipPaymentGateway">
            <summary>
            The payment gateway used to tender the tip, such as shopify_payments. Present only on tips.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.TipPaymentMethod">
            <summary>
            The payment method used to tender the tip, such as Visa. Present only on tips.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.TotalDiscount">
            <summary>
            The total discount amount applied to this line item. This value is not subtracted in the line item price.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.TotalDiscountSet">
            <summary>
            The total discount applied to the line item in shop and presentment currencies.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.DiscountAllocations">
            <summary>
            An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.Properties">
            <summary>
            An array of custom information for an item that has been added to the cart.
            Often used to provide product customization options.
            An array of <see cref="T:ShopifySharp.TaxLine"/> objects, each of which details the taxes applicable to this <see cref="T:ShopifySharp.LineItem"/>.
            </summary>
            <remarks>
            See https://github.com/nozzlegear/ShopifySharp/pull/461 for why the custom converter is required
            </remarks>
        </member>
        <member name="P:ShopifySharp.LineItem.VariantInventoryManagement">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.ProductExists">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItem.PriceSet">
            <summary>
            The price of the line item in shop and presentment currencies
            </summary>
        </member>
        <member name="T:ShopifySharp.LineItemProperty">
            <summary>
            An object representing a properties for <see cref="P:ShopifySharp.LineItem.Properties"/>
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItemProperty.Name">
            <summary>
            The name of the note attribute.
            </summary>
        </member>
        <member name="P:ShopifySharp.LineItemProperty.Value">
            <summary>
            The value of the note attribute.
            </summary>
        </member>
        <member name="T:ShopifySharp.Location">
            <summary>
            An object representing a physical store location.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Active">
            <summary>
            Whether the location is active.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Name">
            <summary>
            The name of the location.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Address1">
            <summary>
            The first line of the address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Address2">
            <summary>
            The second line of the address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Zip">
            <summary>
            The zip or postal code.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.City">
            <summary>
            The city the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Province">
            <summary>
            The province the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.ProvinceCode">
            <summary>
            The code of the province the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Country">
            <summary>
            The country the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.CountryName">
            <summary>
            The name of the country the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.CountryCode">
            <summary>
            The code of the country the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Phone">
            <summary>
            The phone number of the location. Can contain special chars like - and +.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.CreatedAt">
            <summary>
            The date and time when the location was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.UpdatedAt">
            <summary>
            The date and time when the location was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.Location.Legacy">
            <summary>
            Whether this is a fulfillment service location. If true, then the location is a fulfillment service location. If false, then the location was created by the merchant and isn't tied to a fulfillment service.
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.CreatedAt">
            <summary>
            The date and time when the metafield was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.UpdatedAt">
            <summary>
            The date and time when the metafield was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.Key">
            <summary>
            Identifier for the metafield (maximum of 30 characters).
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.Value">
            <summary>
            Information to be stored as metadata. Must be either a string or an int.
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.ValueType">
            <summary>
            States whether the information in the value is stored as a 'string' or 'integer.'
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.Namespace">
            <summary>
            Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters).
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.Description">
            <summary>
            Additional information about the metafield.
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.OwnerId">
            <summary>
            The Id of the Shopify Resource that the metafield is associated with. This value could be the id of things like product, order, variant, collection.
            </summary>
        </member>
        <member name="P:ShopifySharp.MetaField.OwnerResource">
            <summary>
            The name of the Shopify Resource that the metafield is associated with. This could be things like product, order, variant, collection.
            </summary>
        </member>
        <member name="T:ShopifySharp.NoteAttribute">
            <summary>
            An object representing a note attribute for <see cref="P:ShopifySharp.Order.NoteAttributes"/>
            </summary>
        </member>
        <member name="P:ShopifySharp.NoteAttribute.Name">
            <summary>
            The name of the note attribute.
            </summary>
        </member>
        <member name="P:ShopifySharp.NoteAttribute.Value">
            <summary>
            The value of the note attribute.
            </summary>
        </member>
        <member name="T:ShopifySharp.Order">
            <summary>
            An object representing a Shopify order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.AppId">
            <summary>
            Unique identifier of the app who created the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.BillingAddress">
            <summary>
            The mailing address associated with the payment method. This address is an optional field that will not be available on orders that do not require one.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.BrowserIp">
            <summary>
            The IP address of the browser used by the customer when placing the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.BuyerAcceptsMarketing">
            <summary>
            Indicates whether or not the person who placed the order would like to receive email updates from the shop.
            This is set when checking the "I want to receive occasional emails about new products, promotions and other news" checkbox during checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.CancelReason">
            <summary>
            The reason why the order was cancelled. If the order was not cancelled, this value is null. Known values are "customer", "fraud", "inventory" and "other".
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.CancelledAt">
            <summary>
            The date and time when the order was cancelled. If the order was not cancelled, this value is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.CartToken">
            <summary>
            Unique identifier for a particular cart that is attached to a particular order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ClientDetails">
            <summary>
            A <see cref="T:ShopifySharp.ClientDetails"/> object containing information about the client.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ClosedAt">
            <summary>
            The date and time when the order was closed. If the order was not clsoed, this value is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.CreatedAt">
            <summary>
            The date and time when the order was created in Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the payment.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Customer">
            <summary>
            A <see cref="T:ShopifySharp.Customer"/> object containing information about the customer. This value may be null if the order was created through Shopify POS.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.CustomerLocale">
            <summary>
            The two or three letter language code, optionally followed by a region modifier. Example values could be 'en', 'en-CA', 'en-PIRATE'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.DeviceId">
            <summary>
            The unique numeric identifier of the POS device used.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.DiscountCodes">
            <summary>
            Applicable discount codes that can be applied to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.DiscountApplications">
            <summary>
            An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Email">
            <summary>
            The order's email address. Note: On and after 2015-11-03, you should be using <see cref="!:ContactEmail"/> to refer to the customer's email address.
            Between 2015-11-03 and 2015-12-03, updates to an order's email will also update the customer's email. This is temporary so apps can be migrated over to
            doing customer updates rather than order updates to change the contact email. After 2015-12-03, updating updating an order's email will no longer update
            the customer's email and apps will have to use the customer update endpoint to do so.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.FinancialStatus">
            <summary>
            The financial status of an order. Known values are "authorized", "paid", "pending", "partially_paid", "partially_refunded", "refunded" and "voided".
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Fulfillments">
            <summary>
            An array of <see cref="T:ShopifySharp.Fulfillment"/> objects for this order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.FulfillmentStatus">
            <summary>
            The fulfillment status for this order. Known values are 'fulfilled', 'null' and 'partial'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Tags">
            <summary>
            Tags are additional short descriptors, commonly used for filtering and searching, formatted as a string of comma-separated values.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.LandingSite">
            <summary>
            The URL for the page where the buyer landed when entering the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.LineItems">
            <summary>
            An array of <see cref="T:ShopifySharp.LineItem"/> objects, each one containing information about an item in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.LocationId">
            <summary>
            The unique numeric identifier for the physical location at which the order was processed. Only present on orders processed at point of sale.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Name">
            <summary>
            The customer's order name as represented by a number, e.g. '#1001'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Note">
            <summary>
            The text of an optional note that a shop owner can attach to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.NoteAttributes">
            <summary>
            Extra information that is added to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Number">
            <summary>
            Numerical identifier unique to the shop. A number is sequential and starts at 1000.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.OrderNumber">
            <summary>
            A unique numeric identifier for the order. This one is used by the shop owner and customer.
            This is different from the id property, which is also a unique numeric identifier for the order, but used for API purposes.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.OrderStatusUrl">
            <summary>
            The URL pointing to the order status web page. The URL will be null unless the order was created from a checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.PaymentGatewayNames">
            <summary>
            The list of all payment gateways used for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ProcessedAt">
            <summary>
            The date that the order was processed at.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ProcessingMethod">
            <summary>
            The type of payment processing method. Known values are 'checkout', 'direct', 'manual', 'offsite', 'express', 'free' and 'none'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ReferringSite">
            <summary>
            The website that the customer clicked on to come to the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Refunds">
            <summary>
            The list of <see cref="T:ShopifySharp.Refund"/> objects applied to the order
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ShippingAddress">
            <summary>
            The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require one.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.ShippingLines">
            <summary>
            An array of <see cref="T:ShopifySharp.ShippingLine"/> objects, each of which details the shipping methods used.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.SourceName">
            <summary>
            Where the order originated. May only be set during creation, and is not writeable thereafter.
            Orders created via the API may be assigned any string of your choice except for "web", "pos", "iphone", and "android".
            Default is "api".
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.SubtotalPrice">
            <summary>
            Price of the order before shipping and taxes
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TaxLines">
            <summary>
            An array of <see cref="T:ShopifySharp.TaxLine"/> objects, each of which details the total taxes applicable to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TaxesIncluded">
            <summary>
            States whether or not taxes are included in the order subtotal.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Test">
            <summary>
            States whether this is a test order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Token">
            <summary>
            Unique identifier for a particular order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TotalDiscounts">
            <summary>
            The total amount of the discounts applied to the price of the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TotalLineItemsPrice">
            <summary>
            The sum of all the prices of all the items in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TotalTipReceived">
            <summary>
            The sum of all the tips in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TotalPrice">
            <summary>
            The sum of all the prices of all the items in the order, with taxes and discounts included (must be positive).
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TotalTax">
            <summary>
            The sum of all the taxes applied to the order (must be positive).
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.TotalWeight">
            <summary>
            The sum of all the weights of the line items in the order, in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.UpdatedAt">
            <summary>
            The date and time when the order was last modified.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.UserId">
            <summary>
            The unique numerical identifier for the user logged into the terminal at the time the order was processed at. Only present on orders processed at point of sale.
            </summary>
        </member>
        <member name="P:ShopifySharp.Order.Transactions">
            <summary>
            An array of <see cref="T:ShopifySharp.Transaction"/> objects that detail all of the transactions in
            this order.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.Order.Metafields" -->
        <member name="T:ShopifySharp.OrderRisk">
            <summary>
            An object representing a Shopify order risk.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.CauseCancel">
            <summary>
            Use this flag when a fraud check is accompanied with a call to the Orders API to cancel the order. This will indicate to the merchant that this risk was severe enough to force cancellation of the order.
            Note: Setting this parameter does not cancel the order. This must be done by the Orders API.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.CheckoutId">
            <summary>
            The ID of the checkout that the order risk belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.Display">
            <summary>
            States whether or not the risk is displayed. Valid values are "true" or "false".
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.OrderId">
            <summary>
            The id of the order the order risk belongs to
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.Message">
            <summary>
            A message that should be displayed to the merchant to indicate the results of the fraud check.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.Recommendation">
            <summary>
            The recommended action given to the merchant. Known values are 'cancel', 'investigate' and 'accept'.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.Score">
            <summary>
            A number between 0 and 1 indicating percentage likelihood of being fraud.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderRisk.Source">
            <summary>
            This indicates the source of the risk assessment. Known values are 'External', 'Internal' and 'Gateway'.
            </summary>
        </member>
        <member name="T:ShopifySharp.Page">
            <summary>
            An entity representing a Shopify product.
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.Title">
            <summary>
            The name of the page. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.BodyHtml">
            <summary>
            The content of the page, complete with HTML formatting.
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.CreatedAt">
            <summary>
            The date and time when the page was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.UpdatedAt">
            <summary>
            The date and time when the page was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.PublishedAt">
            <summary>
            The date and time when the page was published. The API returns this value in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.Handle">
            <summary>
            A human-friendly unique string for the page automatically generated from its title.
            They are used by the Liquid templating language to refer to objects.
            </summary>
        </member>
        <member name="P:ShopifySharp.Page.TemplateSuffix">
            <summary>
            The suffix of the liquid template being used.
            By default, the original template is called product.liquid, without any suffix.
            Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.Page.Metafields" -->
        <member name="P:ShopifySharp.Policy.Title">
            <summary>
            The name of the policy.
            </summary>
        </member>
        <member name="P:ShopifySharp.Policy.Body">
            <summary>
            The content of the policy.
            </summary>
        </member>
        <member name="P:ShopifySharp.Policy.Url">
            <summary>
            The public URL to policy.
            </summary>
        </member>
        <member name="P:ShopifySharp.Policy.CreatedAt">
            <summary>
            The date and time when the policy was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Policy.UpdatedAt">
            <summary>
            The date and time when the policy was last modified. 
            </summary>
        </member>
        <member name="P:ShopifySharp.PresentmentPrice.Price">
            <summary>
            The price of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.PresentmentPrice.CompareAtPrice">
            <summary>
            The competitors prices for the same item.
            </summary>
        </member>
        <member name="P:ShopifySharp.Price.CurrencyCode">
            <summary>
            The three-letter code (ISO 4217 format) for currency.
            </summary>
        </member>
        <member name="P:ShopifySharp.Price.Amount">
            <summary>
            The variant's price or compare-at price in the currency.
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceBasedShippingRate.Name">
            <summary>
            The name of the price based shipping rate, specified by the user.
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceBasedShippingRate.MinOrderSubtotal">
            <summary>
            Minimum order price
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceBasedShippingRate.Price">
            <summary>
            Rate amount
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceBasedShippingRate.MaxOrderSubtotal">
            <summary>
            Maximum order price
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceBasedShippingRate.ShippingZoneId">
            <summary>
            Shipping zone id
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceRule.Title">
            The title of the price rule.
        </member>
        <member name="P:ShopifySharp.PriceRule.TargetType">
            The target type the price rule applies to. Known values are "line_item" or "shipping_line".
        </member>
        <member name="P:ShopifySharp.PriceRule.TargetSelection">
            The target selection method of the price rule. Use all to apply the discount to all line items
            in the checkout and use entitled to apply to selected entitlements. Known values are "all" or "entitled".
        </member>
        <member name="P:ShopifySharp.PriceRule.AllocationMethod">
            The allocation method of the price rule.
            With an allocation method of each, the discount will be applied to each of the entitled items. For example, for a price rule that take $15 off, each entitled line item in a checkout will be discounted by $15.
            With an allocation method of across, the calculated discount amount will be applied across the entitled items.For example, for a price rule that takes $15 off, the discount will be applied across all the entitled items.
            Currently, if TargetType is shipping_line, then only each is accepted. Known values are "across" or "each".
        </member>
        <member name="P:ShopifySharp.PriceRule.ValueType">
            The value type of the price rule. If target_type is shipping_line then only percentage is accepted. Known values are "fixed_amount" or "percentage".
        </member>
        <member name="P:ShopifySharp.PriceRule.Value">
            The value of the price rule. If target_type is shipping_line, then only -100 is accepted.
            It's important to note that when discounting a resource, the value must be a negative number.
        </member>
        <member name="P:ShopifySharp.PriceRule.OncePerCustomer">
            The price rule can only be used once per customer (tracked by customer id).
        </member>
        <member name="P:ShopifySharp.PriceRule.UsageLimit">
            The maximum number of times the price rule can be used, per discount code.
        </member>
        <member name="P:ShopifySharp.PriceRule.CustomerSelection">
            The customer selection for the price rule.A customer selection of all means there are no restrictions
            on who's eligible for the price rule. Known values are "all" or "prerequisite".
        </member>
        <member name="P:ShopifySharp.PriceRule.PrerequisiteSubtotalRange">
            Prerequisite cart subtotal range.
        </member>
        <member name="P:ShopifySharp.PriceRule.PrerequisiteShippingPriceRange">
            Prerequisite shipping cost range.Can only be used when target_type is shipping_line.
        </member>
        <member name="P:ShopifySharp.PriceRule.PrerequisiteSavedSearchIds">
            A list of prerequisite customer saved search ids. For the price rule to be applicable,
            the customer applying the price rule must be in the group of customers matching the customer saved searches.
        </member>
        <member name="P:ShopifySharp.PriceRule.PrerequisiteCustomerIds">
            A list of prerequisite customer ids. For the price rule to be applicable,
            the customer applying the price rule must be in the group of customers specified.
        </member>
        <member name="P:ShopifySharp.PriceRule.EntitledProductIds">
            A list of entitled product ids.Can be used in combination with entitled_variant_ids. entitled_product_ids can
            only be used in conjunction with target_type set to line_itemif and target_selection set to entitled
        </member>
        <member name="P:ShopifySharp.PriceRule.EntitledVariantIds">
            A list of entitled product variant ids. Can be used in combination with entitled_product_ids.
            entitled_variant_ids can only be used in conjunction with target_type set to line_item if and target_selection set to
            entitled
        </member>
        <member name="P:ShopifySharp.PriceRule.EntitledCollectionIds">
            A list of entitled collection ids. Cannot be used in combination with entitled_product_ids nor
            entitled_variant_ids. entitled_collection_ids can only be used in conjunction with target_typeset to line_item and
            target_selection set to entitled
        </member>
        <member name="P:ShopifySharp.PriceRule.EntitledCountryIds">
            A list of shipping country ids. entitled_country_ids can only be used in conjunction with target_type set to
            shipping_line and target_selection set to entitled.
        </member>
        <member name="P:ShopifySharp.PriceRule.StartsAt">
            The date and time when the price rule starts.
        </member>
        <member name="P:ShopifySharp.PriceRule.EndsAt">
            The date and time when the price rule ends.Must be after starts_at.
        </member>
        <member name="P:ShopifySharp.PriceRule.CreatedAt">
            The date and time the object was created.
        </member>
        <member name="P:ShopifySharp.PriceRule.UpdatedAt">
            The date and time the object was last updated.
        </member>
        <member name="P:ShopifySharp.PriceRuleDiscountCode.Code">
            <summary>
            The discount code.
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceRuleDiscountCode.PriceRuleId">
            <summary>
            Unique numeric identifier for the price rule.
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceRuleDiscountCode.UsageCount">
            <summary>
            Number of times the discount code has been redeemed.
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceRuleDiscountCode.CreatedAt">
            <summary>
            The date and time when the discount code was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.PriceRuleDiscountCode.UpdatedAt">
            <summary>
            The date and time when the discount code was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="T:ShopifySharp.Product">
            <summary>
            An entity representing a Shopify product.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Title">
            <summary>
            The name of the product. In a shop's catalog, clicking on a product's title takes you to that product's page.
            On a product's page, the product's title typically appears in a large font.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.BodyHtml">
            <summary>
            The description of the product, complete with HTML formatting.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.CreatedAt">
            <summary>
            The date and time when the product was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.UpdatedAt">
            <summary>
            The date and time when the product was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.PublishedAt">
            <summary>
            The date and time when the product was published. The API returns this value in ISO 8601 format. 
            Set to NULL to unpublish a product
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Vendor">
            <summary>
            The name of the vendor of the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.ProductType">
            <summary>
            A categorization that a product can be tagged with, commonly used for filtering and searching.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Handle">
            <summary>
            A human-friendly unique string for the Product automatically generated from its title.
            They are used by the Liquid templating language to refer to objects.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.TemplateSuffix">
            <summary>
            The suffix of the liquid template being used.
            By default, the original template is called product.liquid, without any suffix.
            Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.PublishedScope">
            <summary>
            The sales channels in which the product is visible.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Tags">
            <summary>
            A categorization that a product can be tagged with, commonly used for filtering and searching.
            Each comma-separated tag has a character limit of 255.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Variants">
            <summary>
            A list of variant objects, each one representing a slightly different version of the product.
            For example, if a product comes in different sizes and colors, each size and color permutation (such as "small black", "medium black", "large blue"), would be a variant.
            To reorder variants, update the product with the variants in the desired order.The position attribute on the variant will be ignored.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Options">
            <summary>
            Custom product property names like "Size", "Color", and "Material".
            Products are based on permutations of these options. 
            A product may have a maximum of 3 options. 255 characters limit each.
            </summary>
        </member>
        <member name="P:ShopifySharp.Product.Images">
            <summary>
            A list of image objects, each one representing an image associated with the product.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.Product.Metafields" -->
        <member name="T:ShopifySharp.ProductImage">
            <summary>
            An object representing a product image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.ProductId">
            <summary>
            The id of the product associated with the image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.Position">
            <summary>
            The order of the product image in the list. The first product image is at position 1 and is the "main" image for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.CreatedAt">
            <summary>
            The date and time when the product image was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.UpdatedAt">
            <summary>
            The date and time when the product image was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.Src">
            <summary>
            Specifies the location of the product image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.Filename">
            <summary>
            Specifies the file name of the image when creating a <see cref="T:ShopifySharp.ProductImage"/>, where it's then converted into the <see cref="P:ShopifySharp.ProductImage.Src"/> path
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.Attachment">
            <summary>
            A base64 image attachment. Only used when creating a <see cref="T:ShopifySharp.ProductImage"/>, where it's then converted into the <see cref="P:ShopifySharp.ProductImage.Src"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductImage.VariantIds">
            <summary>
            An array of variant ids associated with the image.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.ProductImage.Metafields" -->
        <member name="P:ShopifySharp.ProductOption.ProductId">
            <summary>
            The unique numeric identifier for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductOption.Name">
            <summary>
            The name of the option.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductOption.Position">
            <summary>
            The order of the product variant in the list of product variants. 1 is the first position.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductOption.Values">
            <summary>
            The values for the options.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.ProductId">
            <summary>
            The unique numeric identifier for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Title">
            <summary>
            The title of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.SKU">
            <summary>
            A unique identifier for the product in the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Position">
            <summary>
            The order of the product variant in the list of product variants. 1 is the first position.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Grams">
            <summary>
            The weight of the product variant in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.InventoryPolicy">
            <summary>
            Specifies whether or not customers are allowed to place an order for a product variant when it's out of stock. Known values are 'deny' and 'continue'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.FulfillmentService">
            <summary>
            Service that is doing the fulfillment. Can be 'manual' or any custom string.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.InventoryItemId">
            <summary>
            The unique identifier for the inventory item, which is used in the Inventory API to query for inventory information.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.InventoryManagement">
            <summary>
            Specifies whether or not Shopify tracks the number of items in stock for this product variant. Known values are 'blank' and 'shopify'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Price">
            <summary>
            The price of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.CompareAtPrice">
            <summary>
            The competitors prices for the same item.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Option1">
            <summary>
            Custom properties that a shop owner can use to define product variants.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Option2">
            <summary>
            Custom properties that a shop owner can use to define product variants.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Option3">
            <summary>
            Custom properties that a shop owner can use to define product variants.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.CreatedAt">
            <summary>
            The date and time when the product variant was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.UpdatedAt">
            <summary>
            The date and time when the product variant was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Taxable">
            <summary>
            Specifies whether or not a tax is charged when the product variant is sold.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.TaxCode">
            <summary>
            Specifies a tax code which is used for Avalara tax integrations
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.RequiresShipping">
            <summary>
            Specifies whether or not a customer needs to provide a shipping address when placing an order for this product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Barcode">
            <summary>
            The barcode, UPC or ISBN number for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.InventoryQuantity">
            <summary>
            The number of items in stock for this product variant.
            NOTE: After 2018-07-01, this field will be read-only in the Shopify API. Use the `InventoryLevelService` instead.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.ImageId">
            <summary>
            The unique numeric identifier for one of the product's images.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.Weight">
            <summary>
            The weight of the product variant in the unit system specified with weight_unit.
            </summary>
        </member>
        <member name="P:ShopifySharp.ProductVariant.WeightUnit">
            <summary>
            The unit system that the product variant's weight is measure in. The weight_unit can be either "g", "kg, "oz", or "lb".
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.ProductVariant.Metafields" -->
        <member name="P:ShopifySharp.ProductVariant.PresentmentPrices">
            <summary>
            A list of the variant's presentment prices and compare-at prices in each of the shop's enabled presentment currencies
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.CountryId">
            <summary>
            The unique numeric identifier for the country.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.Name">
            <summary>
            The name of the province or state.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.Code">
            <summary>
            The two letter province or state code.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.Tax">
            <summary>
             The tax value in decimal format.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.TaxName">
            <summary>
            The name of the tax as it is referred to in the applicable province/state. For example, in Ontario, Canada the tax is referred to as HST.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.TaxType">
            <summary>
            A tax_type is applied for a compounded sales tax. For example, the Canadian HST is a compounded sales tax of both PST and GST.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.ShippingZoneId">
            <summary>
            The unique numeric identifier for the shipping zone.
            </summary>
        </member>
        <member name="P:ShopifySharp.Province.TaxPercentage">
            <summary>
             The tax value in percent format.
            </summary>
        </member>
        <member name="T:ShopifySharp.RecurringCharge">
            <summary>
            An object representing a recurring application charge (i.e. a monthly subscription to your Shopify application).
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.ActivatedOn">
            <summary>
            The date and time when the customer activated the <see cref="T:ShopifySharp.RecurringCharge"/>. Will be null if the charge
            has not been activated.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.BillingOn">
            <summary>
            The date and time when the customer will be billed. Will be null if the charge has not been activated by the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.CappedAmount">
            <summary>
            The capped amount is the limit a customer can be charged for usage based billing.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.CancelledOn">
            <summary>
            The date and time when the customer cancelled their recurring application charge. Will be null if the charge has not
            been cancelled.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.ConfirmationUrl">
            <summary>
            The URL that the customer should be sent to, to accept or decline the recurring application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.CreatedAt">
            <summary>
            The date and time when the recurring application charge was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.Name">
            <summary>
            The name of the recurring application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.Price">
            <summary>
            The price of the recurring application charge.
            </summary>
            <remarks>Shopify returns this as a string, but JSON.net should be able to convert it to a decimal.</remarks>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.ReturnUrl">
            <summary>
            The URL the customer is sent to once they accept/decline a charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.Status">
            <summary>
             Known values are 'pending', 'accepted', 'active', 'cancelled', 'declined' and 'expired'.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.Terms">
            <summary>
            States the terms and conditions of usage based billing charges. Must be present in order to create usage charges. These are presented to the merchant when they approve the usage charges for your app.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.Test">
            <summary>
            States whether or not the application charge is a test transaction.
            </summary>
            <remarks>Valid values are 'true' or null. Needs a special converter to convert null to false and vice-versa.</remarks>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.TrialDays">
            <summary>
            Number of days that the customer is eligible for a free trial.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.TrialEndsOn">
            <summary>
            The date and time when the free trial ends. Will be null if the charge has not been accepted.
            </summary>
        </member>
        <member name="P:ShopifySharp.RecurringCharge.UpdatedAt">
            <summary>
            The date and time when the recurring application charge was last updated.
            </summary>
        </member>
        <member name="T:ShopifySharp.RedactedCustomer">
            <summary>
            Represents a customer that should be purged from your database after receiving a GDPR webhook.
            In some cases, a customer record contains only the customer's email address
            </summary>
        </member>
        <member name="P:ShopifySharp.RedactedCustomer.Id">
            <summary>
            The customer's id.
            </summary>
        </member>
        <member name="P:ShopifySharp.RedactedCustomer.Email">
            <summary>
            The customer's email address.
            </summary>
        </member>
        <member name="P:ShopifySharp.RedactedCustomer.Phone">
            <summary>
            The customer's phone number.
            </summary>
        </member>
        <member name="T:ShopifySharp.Redirect">
            <summary>
            An entity representing a Shopify redirect.
            </summary>
        </member>
        <member name="P:ShopifySharp.Redirect.Path">
            <summary>
            The "before" path to be redirected. When the user navigates to this path, they will be redirected to the path specified by target.
            </summary>
        </member>
        <member name="P:ShopifySharp.Redirect.Target">
            <summary>
            The "after" path or URL to be redirected to. This property can be set to any path on the shop's site, or any URL, even one on a 
            completely different domain.
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.CreatedAt">
            <summary>
            The date and time when the refund was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.Notify">
            <summary>
             Whether to send a refund notification to the customer
             </summary>
        </member>
        <member name="P:ShopifySharp.Refund.Shipping">
            <summary>
            Specify how much shipping to refund.
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.Currency">
            <summary>
            The three-letter code (ISO 4217 format) for the currency used for the refund. Note: Required whenever the shipping amount property is provided.
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.OrderAdjustments">
            <summary>
            The list of <see cref="T:ShopifySharp.RefundOrderAdjustment"/> objects
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.ProcessedAt">
            <summary>
            The date and time when the refund was imported.
            </summary>
            <remarks>
            This value can be set to dates in the past when importing from other systems. If no value is provided, it will be auto-generated.
            </remarks>
        </member>
        <member name="P:ShopifySharp.Refund.Note">
            <summary>
            The optional note attached to a refund.
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.RefundLineItems">
            <summary>
            The list of <see cref="T:ShopifySharp.RefundLineItem"/> objects
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.Transactions">
            <summary>
            The list of <see cref="T:ShopifySharp.Transaction"/> objects
            </summary>
        </member>
        <member name="P:ShopifySharp.Refund.UserId">
            <summary>
            The unique identifier of the user who performed the refund.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shipping.FullRefund">
            <summary>
            Whether to refund all remaining shipping.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shipping.Amount">
            <summary>
            Set a specific amount to refund for shipping. Takes precedence over full_refund.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.LineItem">
            <summary>
            The single <see cref="T:ShopifySharp.LineItem"/> being returned.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.LineItemId">
            <summary>
            The unique identifier of the refund line item.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.Quantity">
            <summary>
            The quantity of the associated line item that was returned.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.TotalTax">
            <summary>
            Tax amount refunded
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.SubTotal">
            <summary>
            Item subtotal
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.SubTotalTaxSet">
            <summary>
            The subtotal of the refund line item in shop and presentment currencies.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.TotalTaxSet">
            <summary>
            The total tax of the line item in shop and presentment currencies.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.RestockType">
            <summary>
            How this refund line item affects inventory levels.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundLineItem.LocationId">
            <summary>
            The unique identifier of the location where the items will be restocked.
            Required when restock_type has the value return or cancel.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.OrderId">
            <summary>
            The unique identifier of the order
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.RefundId">
            <summary>
            The unique identifier of the refund
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.Amount">
            <summary>
            The amount refunded (it is negative and does not include tax).
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.TaxAmount">
            <summary>
            The tax amount refunded (negative).
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.Kind">
            <summary>
            The type of adjustment. Values include "refund_discrepancy", "shipping_refund"
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.Reason">
            <summary>
            Reason for the refund
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.AmountSet">
            <summary>
            The amount of the order adjustment in shop and presentment currencies.
            </summary>
        </member>
        <member name="P:ShopifySharp.RefundOrderAdjustment.TaxAmountSet">
            <summary>
            The tax amount of the order adjustment in shop and presentment currencies.
            </summary>
        </member>
        <member name="T:ShopifySharp.ScriptTag">
            <summary>
            An object representing remote javascript tags that are loaded into the pages of a shop's storefront.
            </summary>
        </member>
        <member name="P:ShopifySharp.ScriptTag.CreatedAt">
            <summary>
            The date and time when the <see cref="T:ShopifySharp.ScriptTag"/> was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ScriptTag.DisplayScope">
            <summary>
            Where the script tag should be included on the store. Known values are 'online_store', 'order_status' or 'all'. Defaults to 'all'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ScriptTag.Event">
            <summary>
            DOM event which triggers the loading of the script. The only known value is 'onload'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ScriptTag.Src">
            <summary>
            Specifies the location of the ScriptTag.
            </summary>
        </member>
        <member name="P:ShopifySharp.ScriptTag.UpdatedAt">
            <summary>
            The date and time when the <see cref="T:ShopifySharp.ScriptTag"/> was updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.CarrierIdentifier">
            <summary>
            The carrier provided identifier.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.Code">
            <summary>
            A reference to the shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.Phone">
            <summary>
            The phone number used for the shipment.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.Price">
            <summary>
            The price of this shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.DiscountedPrice">
            <summary>
            The discounted price of this shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.DiscountAllocations">
            <summary>
            An ordered list of amounts allocated by discount applications. Each discount allocation is associated to a particular discount application.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.Source">
            <summary>
            The source of the shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.Title">
            <summary>
            The title of the shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingLine.TaxLines">
            <summary>
            A list of <see cref="T:ShopifySharp.TaxLine"/> objects, each of which details the taxes applicable to this <see cref="T:ShopifySharp.ShippingLine"/>.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShippingZone">
            <summary>
            This is used to view shipping zones, their countries, provinces, and shipping rates.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingZone.Name">
            <summary>
            The name of the shipping zone, specified by the user.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingZone.Countries">
            <summary>
            A list of countries that belong to the shipping zone.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingZone.WeightBasedShippingRates">
            <summary>
            Information about weight based shipping rates used.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingZone.PriceBasedShippingRates">
            <summary>
            Information about price based shipping rates used.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShippingZone.CarrierShippingRateProviders">
            <summary>
            Information about carrier shipping providers and the rates used.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Address1">
            <summary>
            The shop's street address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.City">
            <summary>
            The city in which the shop is located.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Country">
            <summary>
            The shop's country (by default equal to the two-letter country code).
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.CountryCode">
            <summary>
            The two-letter country code corresponding to the shop's country.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.CountryName">
            <summary>
            The shop's normalized country name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.CreatedAt">
            <summary>
            The date and time when the shop was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.CustomerEmail">
            <summary>
            The customer's email.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Currency">
            <summary>
            The three-letter code for the currency that the shop accepts.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Description">
            <summary>
            The shop's description.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Domain">
            <summary>
            The shop's domain.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Email">
            <summary>
            The contact email address for the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.EnabledPresentmentCurrencies">
            <summary>
            Enabled currencies
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.ForceSSL">
            <summary>
            Indicates whether the shop forces requests made to its resources to be made over SSL, using the HTTPS protocol. If true, HTTP requests will be redirected to HTTPS.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.GoogleAppsDomain">
            <summary>
            Present when a shop has a google app domain. It will be returned as a URL, else null.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.GoogleAppsLoginEnabled">
            <summary>
            Present if a shop has google apps enabled. Those shops with this feature will be able to login to the google apps login.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Latitude">
            <summary>
            Geographic coordinate specifying the north/south location of a shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Longitude">
            <summary>
            Geographic coordinate specifying the east/west location of a shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.MoneyFormat">
            <summary>
            A string representing the way currency is formatted when the currency isn't specified.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.MoneyWithCurrencyFormat">
            <summary>
            A string representing the way currency is formatted when the currency is specified.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.MultiLocationEnabled">
            <summary>
            Whether multi-location is enabled
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.MyShopifyDomain">
            <summary>
            The shop's 'myshopify.com' domain.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Name">
            <summary>
            The name of the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.PlanName">
            <summary>
            The name of the Shopify plan the shop is on.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.PlanDisplayName">
            <summary>
            The display name of the Shopify plan the shop is on.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.PasswordEnabled">
            <summary>
            Indicates whether the Storefront password protection is enabled.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Phone">
            <summary>
            The contact phone number for the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.PrimaryLocale">
            <summary>
            The shop's primary locale.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Province">
            <summary>
            The shop's normalized province or state name.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.ProvinceCode">
            <summary>
            The two-letter code for the shop's province or state.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.ShipsToCountries">
            <summary>
            A list of countries the shop ships products to, separated by a comma.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.ShopOwner">
            <summary>
            The username of the shop owner.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Source">
            <summary>
            Unkown. Shopify documentation does not currently indicate what this property actually is.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.TaxShipping">
            <summary>
            Specifies whether or not taxes were charged for shipping.
            </summary>
            <remarks>Although the Shopify docs don't indicate this, it's possible for the value to be null.</remarks>
        </member>
        <member name="P:ShopifySharp.Shop.TaxesIncluded">
            <summary>
            The setting for whether applicable taxes are included in product prices. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.CountyTaxes">
            <summary>
            The setting for whether the shop is applying taxes on a per-county basis or not (US-only). Valid values are: "true" or "null."
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Timezone">
            <summary>
            The name of the timezone the shop is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.IANATimezone">
            <summary>
            The named timezone assigned by the IANA.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.Zip">
            <summary>
            The zip or postal code of the shop's address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.HasStorefront">
            <summary>
            Indicates whether the shop has web-based storefront or not.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.SetupRequired">
            <summary>
            Indicates whether the shop has any outstanding setup steps or not.
            </summary>
        </member>
        <member name="P:ShopifySharp.Shop.WeightUnit">
            <summary>
            The default unit of weight measurement 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyObject.Id">
            <summary>
            The object's unique id.
            </summary>
            <remarks>
            Some object ids are longer than the max int32 value. Using long instead.
            Marked as nullable due to issues I've run into when trying to create a resource. If Id is present when creating, 
            Shopify will try to find that resource. By default it's set to 0 when not null, so the resource won't exist and 
            Shopify will return a 404 Not Found. This is most obvious when creating a customer with a <see cref="T:ShopifySharp.Address"/> 
            and the <see cref="T:ShopifySharp.Address"/> Id set to 0.
            </remarks>
        </member>
        <member name="T:ShopifySharp.ShopifyPaymentsBalance">
            <summary>
            An object representing a Shopify payments balance.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPaymentsDispute">
            <summary>
            An object representing a Shopify payments dispute.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPaymentsPayout">
            <summary>
            An object representing a Shopify payments payout.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPaymentsPayoutSummary">
            <summary>
            An object representing a Shopify payments payout summary.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPaymentsTransaction">
            <summary>
            An object representing a Shopify payments transction.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopRedactedWebhook">
            <summary>
            Sent via the shop/redacted GDPR webhook, indicating that you should purge the shop's data from your systems.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopRedactedWebhook.ShopId">
            <summary>
            The shop's id.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopRedactedWebhook.ShopDomain">
            <summary>
            The shop's *.myshopify.com domain.
            </summary>
        </member>
        <member name="T:ShopifySharp.SmartCollection">
            <summary>
            An entity representing a Shopify Smart Collection Object.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.BodyHtml">
            <summary>
            The description of the smart collection, complete with HTML markup. Many templates display this on their smart collection page.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.Handle">
            <summary>
            A human-friendly unique string for the smart collection automatically generated from its title. This is used in shop themes by the Liquid templating language to refer to the smart collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.Image">
            <summary>
            The collection image.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.PublishedAt">
            <summary>
            This can have two different types of values, depending on whether the smart collection has been published (i.e., made visible to customers):
            If the smart collection is published, this value is the date and time when it was published.The API returns this value in ISO 8601 format.
            If the smart collection is hidden (i.e., not published), this value is null. Changing a smart collection's status from published to hidden changes its published_at property to null.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.PublishedScope">
            <summary>
            The sales channels in which the smart collection is visible. The only currently known value is 'global'.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.Rules">
            <summary>
            The list of rules that define what products go into the smart collection.        
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.Disjunctive">
            <summary>
            If false, products must match all of the rules to be included in the collection. If true, products can only match one of the rules.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.SortOrder">
            <summary>
            The order in which products in the smart collection appear. Known values are 'alpha-asc', 'alpha-desc', 'best-selling', 'created', 'created-desc', 'manual', 'price-asc', 'price-desc'.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.TemplateSuffix">
            <summary>
            The suffix of the template you are using. By default, the original template is called product.liquid, without any suffix. Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.Title">
            <summary>
            The name of the smart collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollection.UpdatedAt">
            <summary>
            The date and time when the smart collection was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:ShopifySharp.SmartCollection.Metafields" -->
        <member name="T:ShopifySharp.SmartCollectionImage">
            <summary>
            An object representing the image for a <see cref="T:ShopifySharp.SmartCollection"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionImage.CreatedAt">
            <summary>
            The date the image was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionImage.Src">
            <summary>
            The image's source URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionImage.Attachment">
            <summary>
            The image's base64 attachment, used when creating an image.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionImage.Width">
            <summary>
            Width of the image in pixels.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionImage.Height">
            <summary>
            Height of the image in pixels.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionImage.Alt">
            <summary>
            Alternative text that describes the collection image.
            </summary>
        </member>
        <member name="T:ShopifySharp.SmartCollectionRules">
            <summary>
            An entity representing a Shopify Smart Collection Rule.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionRules.Relation">
            <summary>
            The relationship between the column choice, and the condition.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionRules.Condition">
            <summary>
            Select products for a collection using a condition. Conditions are either strings or numbers, depending on the relation.
            </summary>
        </member>
        <member name="P:ShopifySharp.SmartCollectionRules.Column">
            <summary>
            The properties of a product that can be used to to populate a collection.
            </summary>
        </member>
        <member name="P:ShopifySharp.TaxLine.Price">
            <summary>
            The amount of tax to be charged.
            </summary>
        </member>
        <member name="P:ShopifySharp.TaxLine.Rate">
            <summary>
            The rate of tax to be applied.
            </summary>
        </member>
        <member name="P:ShopifySharp.TaxLine.Title">
            <summary>
            The name of the tax.
            </summary>
        </member>
        <member name="P:ShopifySharp.TaxLine.PriceSet">
            <summary>
            The amount added to the order for this tax in shop and presentment currencies.
            </summary>
        </member>
        <member name="T:ShopifySharp.Theme">
            <summary>
            An entity representing a Shopify theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.CreatedAt">
            <summary>
            The date and time when the theme was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.Name">
            <summary>
            The name of the theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.Role">
            <summary>
            Specifies how the theme is being used within the shop. Known values are 'main', 'mobile' and 'unpublished'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.UpdatedAt">
            <summary>
            The date and time when the theme was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.Previewable">
            <summary>
            Indicates if the theme can currently be previewed.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.Processing">
            <summary>
            Indicates if files are still being copied into place for this theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.Theme.ThemeStoreId">
            <summary>
            The theme's store id. Can be null if not published in the store.
            </summary>
        </member>
        <member name="T:ShopifySharp.Transaction">
            <summary>
            An object representing a Shopify transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Amount">
            <summary>
            The amount of money that the transaction was for.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Authorization">
            <summary>
            The authorization code associated with the transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.CreatedAt">
            <summary>
            The date and time when the transaction was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.DeviceId">
            <summary>
            The unique identifier for the device.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Gateway">
            <summary>
            The name of the gateway the transaction was issued through.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.SourceName">
            <summary>
            The origin of the transaction. This is set by Shopify and cannot be overridden. Example values include: 'web', 'pos', 'iphone', 'android'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.PaymentDetails">
            <summary>
            An object containing information about the credit card used for this transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Kind">
            <summary>
            The kind of transaction. Known values are 'authorization', 'capture', 'sale', 'void' and 'refund'.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.OrderId">
            <summary>
            A unique numeric identifier for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Receipt">
            <summary>
            Shopify does not currently offer documentation for this object.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.ErrorCode">
            <summary>
            A standardized error code, e.g. 'incorrect_number', independent of the payment provider. Value can be null. A full list of known values can be found at https://help.shopify.com/api/reference/transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Status">
            <summary>
            The status of the transaction. Valid values are: pending, failure, success or error.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Test">
            <summary>
            Whether the transaction is for testing purposes.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.UserId">
            <summary>
            The unique identifier for the user.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the payment.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.Message">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.LocationId">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.Transaction.ParentId">
            <summary>
            This property is undocumented by Shopify.
            </summary>
        </member>
        <member name="T:ShopifySharp.UsageCharge">
            <summary>
            Represents a variable monthly fee for an app or a service.
            </summary>
        </member>
        <member name="P:ShopifySharp.UsageCharge.CreatedAt">
            <summary>
            The date and time when the usage charge was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.UsageCharge.Description">
            <summary>
            The name of the usage charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.UsageCharge.Price">
            <summary>
            The price of the usage charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.UsageCharge.RecurringApplicationChargeId">
            <summary>
            The recurring application charge the usage charge belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.UsageCharge.UpdatedAt">
            <summary>
            The date and time when the usage charge was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.AccountOwner">
            <summary>
            Identifies if the user is the owner of the Shopify account.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.Bio">
            <summary>
            User specified description of oneself.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.Email">
            <summary>
            Email address associated with this account.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.FirstName">
            <summary>
            The first name of the account user.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.IM">
            <summary>
            The IM account address.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.LastName">
            <summary>
            The last name of the account user.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.Permissions">
            <summary>
            The permissions that the account has. Users will either have "full" or "limited" permissions.
            <para>Limited permissions are scoped to a user in that they can only view certain parts of the Shopify Admin</para> 
            <para>The types of permissions a limited user can have are as follows:</para> 
            <para>dashboard: Can see Shop performance and statistics</para> 
            <para>orders: Can view and modify orders</para> 
            <para>customers: Can view and modify customers</para> 
            <para>marketing: Can view and modify marketing related products such as discount codes</para> 
            <para>products: Can view and modify products</para> 
            <para>gift_cards: Can view and modify gift cards</para> 
            <para>pages: Can view and modify shop pages</para> 
            <para>links: Can view and modify links and menus</para> 
            <para>themes: Can view and modify shop themes</para> 
            <para>applications: Can authorize the installation of third party applications</para> 
            <para>preferences: Can view the preferences and configuration of a shop</para> 
            <para>reports: Can view and create reports</para> 
            </summary>
        </member>
        <member name="P:ShopifySharp.User.Phone">
            <summary>
            Phone number associated with the account.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.ReceiveAnnouncements">
            <summary>
            Whether or not this account will receive email announcements from Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.User.Url">
            <summary>
            Homepage or other web address
            </summary>
        </member>
        <member name="P:ShopifySharp.User.UserType">
            <summary>
            The type that the account is:
            <para>regular - A normal account that can access the web admin</para> 
            <para>restricted - A user account that cannot access the web admin</para> 
            </summary>
        </member>
        <member name="T:ShopifySharp.Webhook">
            <summary>
            An entity representing a Shopify webhook.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.Address">
            <summary>
            The URL where the webhook should send the POST request when the event occurs.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.CreatedAt">
            <summary>
            The date and time when the webhook was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.Fields">
            <summary>
            An optional array of fields which should be included in webhooks.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.Format">
            <summary>
            The format in which the webhook should send the data. Valid values are json and xml.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.MetafieldNamespaces">
            <summary>
            An optional array of namespaces for metafields that should be included in webhooks.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.Topic">
            <summary>
            The event that will trigger the webhook, e.g. 'orders/create' or 'app/uninstalled'. A full list of webhook topics can be found at https://help.shopify.com/api/reference/webhook.
            </summary>
        </member>
        <member name="P:ShopifySharp.Webhook.UpdatedAt">
            <summary>
            The date and time when the webhook was updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.WeightBasedShippingRate.WeightLow">
            <summary>
            Minimum order weight
            </summary>
        </member>
        <member name="P:ShopifySharp.WeightBasedShippingRate.WeightHigh">
            <summary>
            Maximum order weight
            </summary>
        </member>
        <member name="P:ShopifySharp.WeightBasedShippingRate.Name">
            <summary>
            Name of weight based rate
            </summary>
        </member>
        <member name="P:ShopifySharp.WeightBasedShippingRate.Price">
            <summary>
            Rate amount
            </summary>
        </member>
        <member name="P:ShopifySharp.WeightBasedShippingRate.ShippingZoneId">
            <summary>
            Shipping zone id
            </summary>
        </member>
        <member name="T:ShopifySharp.EnumExtensions">
            <summary>
            Enum Extension Method
            </summary>
        </member>
        <member name="M:ShopifySharp.EnumExtensions.ToSerializedString(System.Enum)">
            <summary>
            Reads and uses the enum's <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/> for serialization.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.EnumExtensions.EnumListToString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Convert list of Enums to a comma seperated string
            </summary>
        </member>
        <member name="M:ShopifySharp.ObjectExtensions.ToDictionary(System.Object)">
            <summary>
            Converts the object to a dictionary./>
            </summary>
            <returns>The object as a <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
        </member>
        <member name="M:ShopifySharp.StringExtensions.StartsWithIgnoreCase(System.String,System.String)">
            <summary>
            Checks if a string starts with another string, ignoring case.
            </summary>
        </member>
        <member name="M:ShopifySharp.StringExtensions.EndsWithIgnoreCase(System.String,System.String)">
            <summary>
            Checks if a string ends with another string, ignoring case.
            </summary>
        </member>
        <member name="M:ShopifySharp.StringExtensions.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            Checks if a string contains another string, ignorning case.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.CreatedAtMin">
            <summary>
            Restricts results to those created after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.CreatedAtMax">
            <summary>
            Restricts results to those created before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.PublishedAtMin">
            <summary>
            Restricts results to those published after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.PublishedAtMax">
            <summary>
            Restricts results to those published before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleCountFilter.PublishedStatus">
            <summary>
            Published Status.
            published - Show only published objects, unpublished - Show only unpublished objects, any - Show all objects(default)
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ArticleListFilter">
            <summary>
            Options for filtering the results of listing articles.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.Handle">
            <summary>
            Filter the results to this article handle.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.Author">
            <summary>
            Filter the articles to just those by a given author.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.Tag">
            <summary>
            Filter the articles to just those with a given tag.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.CreatedAtMin">
            <summary>
            Restricts results to those created after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.CreatedAtMax">
            <summary>
            Restricts results to those created before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.PublishedAtMin">
            <summary>
            Show objects published after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.PublishedAtMax">
            <summary>
            Show objects published before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ArticleListFilter.PublishedStatus">
            <summary>
            Published Status.
            published - Show only published objects, unpublished - Show only unpublished objects, any - Show all objects(default)
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.AssetListFilter.Fields">
            <summary>
            Retrieve only certain fields, specified by a comma-separated list of field names. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ChargeListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutCountFilter.CreatedAtMin">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutCountFilter.CreatedAtMax">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutCountFilter.UpdatedAtMin">
            <summary>
            Restrict results to those created at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutCountFilter.UpdatedAtMax">
            <summary>
            Restrict results to those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutCountFilter.Status">
            <summary>
            Restrict results to those with the given status. Known values: <c>"open"</c>, <c>"closed"</c>. Default: <c>"open"</c>.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutListFilter.CreatedAtMin">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutListFilter.CreatedAtMax">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutListFilter.UpdatedAtMin">
            <summary>
            Restrict results to those created at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutListFilter.UpdatedAtMax">
            <summary>
            Restrict results to those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CheckoutListFilter.Status">
            <summary>
            Restrict results to those with the given status. Known values: <c>"open"</c>, <c>"closed"</c>. Default: <c>"open"</c>.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.CollectCountFilter">
            <summary>
            Options for filtering a count of Collects. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CollectCountFilter.ProductId">
            <summary>
            An optional product id to retrieve. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CollectCountFilter.CollectionId">
            <summary>
            An optional collection id to retrieve. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CollectListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CollectListFilter.CollectionId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CollectListFilter.ProductId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.Title">
            <summary>
            Restricts results to those with given title 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.ProductId">
            <summary>
            Restricts results to those that includes given product
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.PublishedAtMin">
            <summary>
            Restricts results to those published after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.PublishedAtMax">
            <summary>
            Restricts results to those published before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionCountFilter.PublishedStatus">
            <summary>
            Restricts results to those with the given published status. Known values: published, unpublished, any. Default: any.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.CustomCollectionListFilter">
            <summary>
            Options for filtering custom collection lists.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionListFilter.Title">
            <summary>
            Show smart collections with given title 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionListFilter.ProductId">
            <summary>
            Show smart collections that includes given product
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomCollectionListFilter.Handle">
            <summary>
            Filter by smart collection handle
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerListFilter.Ids">
            <summary>
            Retrieve only those specified by a comma-separated list of order IDs.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerOrderListFilter.Status">
            <summary>
            Restricts results to those with the given status. Known values are "open", "closed", "cancelled" and "any".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSavedSearchCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.CustomerSavedSearchFilter">
            <summary>
            Options for filtering the results of one customer saved search.
            </summary>
            <remarks>
            Note: this is _not_ the same as _listing_ customer saved searches. This is for using one of those saved searches
            to list customers that match it.
            https://shopify.dev/docs/admin-api/rest/reference/customers/customersavedsearch#other-2020-01
            </remarks>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSavedSearchFilter.Order">
            <summary>
            Set the field and direction by which to order results, e.g. "last_order_date DESC".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSavedSearchFilter.Fields">
            <summary>
            Retrieve only certain fields, specified by a comma-separated list of field names. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSavedSearchFilter.Limit">
            <summary>
            The number of items which should be returned. Default is 50, maximum is 250.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSavedSearchListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSearchListFilter.Order">
            <summary>
            Set the field and direction by which to order results, e.g. "last_order_date DESC".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.CustomerSearchListFilter.Query">
            <summary>
            Text to search for in the shop's customer data.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderCountFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderCountFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderCountFilter.Status">
            <summary>
            Only return orders with the given status. Known values are "open" (default), "invoice_sent", and "completed".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderListFilter.Ids">
            <summary>
            Retrieve only those specified by a comma-separated list of order IDs.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderListFilter.Status">
            <summary>
            Only return orders with the given status. Known values are "open" (default), "invoice_sent", and "completed".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderListFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.DraftOrderListFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventCountFilter.CreatedAtMin">
            <summary>
            Show events created at or after date and time
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventCountFilter.CreatedAtMax">
            <summary>
            Show events created at or before date and time
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.EventListFilter">
            <summary>
            A generic class for filtering the results of a .CountAsync command.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventListFilter.CreatedAtMin">
            <summary>
            Show events created at or after date and time
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventListFilter.CreatedAtMax">
            <summary>
            Show events created at or before date and time
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventListFilter.Filter">
            <summary>
            Only show events specified in filter (comma , separated). A full list of events can be found at https://help.shopify.com/api/reference/event
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.EventListFilter.Verbs">
            <summary>
            Only show events of a certain kind (comma , separated). A full list of events can be found at https://help.shopify.com/api/reference/event
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.FulfillmentCountFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date and time.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.FulfillmentCountFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date and time.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.FulfillmentCountFilter.CreatedAtMin">
            <summary>
            Restricts results to those created at or after date and time.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.FulfillmentCountFilter.CreatedAtMax">
            <summary>
            Restricts results to those created at or before date and time.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.FulfillmentListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.FulfillmentServiceListFilter.Scope">
            <summary>
            <para>
            Restricts results to those with the given scope value. Known values:
            </para>
            <para>
            <c>"current_client"</c>: Returns fulfillment providers that have been created by the app sending the request (default)
            </para>
            <para>
            <c>"all"</c>: Returns all the fulfillment providers
            </para>
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.GiftCardCountFilter.Status">
            <summary>
            Restricts results to those with the given status. Known values are "enabled", "disabled".
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.GiftCardListFilter">
            <summary>
            Options for filtering gift cards. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.GiftCardListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.GiftCardListFilter.Status">
            <summary>
            Restricts results to those with the given status. Known values are "enabled", "disabled".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.GiftCardSearchFilter.Order">
            <summary>
            The field and direction to order results by.
            Default: `disabled_at DESC`
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.GiftCardSearchFilter.Query">
            <summary>
            The text to search for.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.InventoryItemListFilter.Ids">
            <summary>
            Show only inventory items specified by a comma-separated list of IDs.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.InventoryLevelListFilter">
            <summary>
            You **must** include InventoryItemIds, LocationIds, or both as filter parameters.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ListFilter`1">
            <summary>
            A generic class for filtering the results of a .ListAsync command.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ListFilter`1.PageInfo">
            <summary>
            A unique ID used to access a page of results. Must be present to list more than the first page of results. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ListFilter`1.Limit">
            <summary>
            The number of items which should be returned. Default is 50, maximum is 250.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ListFilter`1.Fields">
            <summary>
            Comma-separated list of which fields to show in the results. This parameter only works for some endpoints.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.MetaFieldFilter">
            <summary>
            Options for filtering <see cref="!:MetaFieldService.CountAsync(long?, string, MetaFieldFilter)"/> and 
            <see cref="!:MetaFieldService.ListAsync(long?, string, MetaFieldFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.Namespace">
            <summary>
            Filter by namespace.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.Key">
            <summary>
            Filter by key value.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.ValueType">
            <summary>
            Filter by value_type.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.CreatedAtMin">
            <summary>
            Show metafields created after date
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.CreatedAtMax">
            <summary>
            Show metafields created before date
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.UpdatedAtMin">
            <summary>
            Show metafields last updated after date
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.MetaFieldFilter.UpdatedAtMax">
            <summary>
            Show metafields last updated before date 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.Status">
            <summary>
            Restricts results to those with the given status. Known values are "open", "closed", "cancelled" and "any".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.FinancialStatus">
            <summary>
            Restricts results to those with the given financial status. Known values are "authorized", "paid", "pending", "partially_paid", "partially_refunded", "refunded" and "voided".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.FulfillmentStatus">
            <summary>
            Restricts results to those with the given fulfillment status. Known values are "shipped", "partial", "unshipped", "any" and "unfulfilled". Default: any. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.CreatedAtMin">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.CreatedAtMax">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.UpdatedAtMin">
            <summary>
            Restrict results to those created at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderCountFilter.UpdatedAtMax">
            <summary>
            Restrict results to those last updated at or before date.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.OrderListFilter">
            <summary>
            Options for filtering lists of orders.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.Name">
            <summary>
            Restricts results to those with the given order name. Note that when specifying name, "#" must be dropped.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.Status">
            <summary>
            Restricts results to those with the given status. Known values are "open", "closed", "cancelled" and "any".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.FinancialStatus">
            <summary>
            Restricts results to those with the given financial status. Known values are "authorized", "paid", "pending", "partially_paid", "partially_refunded", "refunded" and "voided".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.FulfillmentStatus">
            <summary>
            Restricts results to those with the given fulfillment status. Known values are "shipped", "partial", "unshipped", "any" and "unfulfilled". Default: any. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.CreatedAtMin">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.CreatedAtMax">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.UpdatedAtMin">
            <summary>
            Restrict results to those created at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.UpdatedAtMax">
            <summary>
            Restrict results to those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.ProcessedAtMin">
            <summary>
            Show orders imported after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.ProcessedAtMax">
            <summary>
            Show orders imported before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.AttributionAppId">
            <summary>
            Show orders attributed to a specific app. Valid values are the app ID to filter on (eg. 123) or a value of "current" to only show orders for the app currently consuming the API.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.Ids">
            <summary>
            Retrieve only orders specified by a comma-separated list of order IDs.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.OrderListFilter.SinceId">
            <summary>
            Retrieve only orders specified by a comma-separated list of order IDs.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.Title">
            <summary>
            Filter by page title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.CreatedAtMin">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.CreatedAtMax">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.UpdatedAtMin">
            <summary>
            Restrict results to those created at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.UpdatedAtMax">
            <summary>
            Restrict results to those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.PublishedAtMin">
            <summary>
            Restricts results to those published after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.PublishedAtMax">
            <summary>
            Restricts results to those published before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageCountFilter.PublishedStatus">
            <summary>
            Restricts results to those with the given published status. Known values: published, unpublished, any. Default: any.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.PageListFilter">
            <summary>
            Options for filtering lists of Pages. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.Title">
            <summary>
            Filter by page title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.Handle">
            <summary>
            Filter by page handle.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.CreatedAtMin">
            <summary>
            Show those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.CreatedAtMax">
            <summary>
            Show those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.UpdatedAtMin">
            <summary>
            Show those updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.UpdatedAtMax">
            <summary>
            Show those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.PublishedAtMin">
            <summary>
            Show those published at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.PublishedAtMax">
            <summary>
            Show those last published at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PageListFilter.PublishedStatus">
            <summary>
            Restrict results to pages with a given published status. Known values: published, unpublished, any. Default: any. 
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.PriceRuleDiscountCodeListFilter">
            <summary>
            Options for filtering lists of price rule discount codes.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.PriceRuleListFilter">
            <summary>
            Options for filtering lists of PriceRules. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.CreatedAtMin">
            <summary>
            Restricts results to those created after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.CreatedAtMax">
            <summary>
            Restricts results to those created before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.StartsAtMin">
            <summary>
            Show price rules starting after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.StartsAtMax">
            <summary>
            Show price rules starting before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.EndsAtMin">
            <summary>
            Show price rules ending after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.EndsAtMax">
            <summary>
            Show price rules ending before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.PriceRuleListFilter.TimesUsed">
            <summary>
            Show price rules with times used.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.ProductType">
            <summary>
            Filter by product type.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.CollectionId">
            <summary>
            Filter by collection id.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.Vendor">
            <summary>
            Filter by product vendor.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.CreatedAtMax">
            <summary>
            Restrict results to those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.UpdatedAtMin">
            <summary>
            Restrict results to those created at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.UpdatedAtMax">
            <summary>
            Restrict results to those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.PublishedAtMin">
            <summary>
            Restricts results to those published after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.PublishedAtMax">
            <summary>
            Restricts results to those published before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductCountFilter.PublishedStatus">
            <summary>
            Restricts results to those with the given published status. Known values: published, unpublished, any. Default: any.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductImageCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ProductListFilter">
            <summary>
            Options for filtering lists of Products. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.Title">
            <summary>
            Filter by product title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.Vendor">
            <summary>
            Filter by product vendor.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.Handle">
            <summary>
            Filter by product handle.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.ProductType">
            <summary>
            Filter by product type.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.CollectionId">
            <summary>
            Filter by collection id.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.CreatedAtMin">
            <summary>
            Show those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.CreatedAtMax">
            <summary>
            Show those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.UpdatedAtMin">
            <summary>
            Show those updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.UpdatedAtMax">
            <summary>
            Show those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.PublishedAtMin">
            <summary>
            Show those published at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.PublishedAtMax">
            <summary>
            Show those last published at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.PublishedStatus">
            <summary>
            Restricts results to those with the given published status. Known values: published, unpublished, any. Default: any.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.PresentmentCurrencies">
            <summary>
            Return presentment prices in only certain currencies. Each entry must be an ISO 4217 valid currency code.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductListFilter.Ids">
            <summary>
            Retrieve only those specified by a comma-separated list of order IDs.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ProductVariantListFilter">
            <summary>
            Options for filtering lists of Product Variants. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductVariantListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ProductVariantListFilter.PresentmentCurrencies">
            <summary>
            Return presentment prices in only certain currencies. Each entry must be an ISO 4217 valid currency code.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.RecurringChargeListFilter">
            <summary>
            Options for filtering lists of Recurring Charges. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.RecurringChargeListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.RedirectCountFilter.Path">
            <summary>
            An optional parameter that filters the result to redirects with the given path.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.RedirectCountFilter.Target">
            <summary>
            An optional parameter that filters the result to redirects with the given target.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.RedirectListFilter">
            <summary>
            Options for filtering lists of Redirects.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.RedirectListFilter.Path">
            <summary>
            Filters the result to those with the given path.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.RedirectListFilter.Target">
            <summary>
            Filters the result to those with the given target.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.RefundListFilter.InShopCurrency">
            <summary>
            Show amounts in the shop currency for the underlying transaction. Default: false.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ScriptTagCountFilter.Src">
            <summary>
            Restricts results to those with the given src value.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ScriptTagListFilter">
            <summary>
            Options for filtering lists of Script Tags.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ScriptTagListFilter.Src">
            <summary>
            Restricts results to those with the given src value.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShippingZoneListFilter">
            <summary>
            Options for filtering lists of Shipping Zones. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsDisputeListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsDisputeListFilter.LastId">
            <summary>
            Return only disputes before the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsDisputeListFilter.Status">
            <summary>
            Return only disputes with the specified status.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsDisputeListFilter.InitiatedAt">
            <summary>
            Return only disputes with the specified initiated_at date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter.LastId">
            <summary>
            Filter response to payouts exclusively before the specified ID
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter.DateMin">
            <summary>
            Filter response to payouts inclusively after the specified date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter.DateMax">
            <summary>
            Filter response to payouts inclusively before the specified date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter.Date">
            <summary>
            Filter response to payouts on the specified date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter.Status">
            <summary>
            Filter response to payouts with the specified status
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsTransactionListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsTransactionListFilter.LastId">
            <summary>
            Filter response to transactions exclusively before the specified ID
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsTransactionListFilter.Test">
            <summary>
            Filter response to transactions placed in test mode.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsTransactionListFilter.PayoutId">
            <summary>
            Filter response to transactions paid out in the specified payout.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPaymentsTransactionListFilter.PayoutStatus">
            <summary>
            Filter response to transactions with the specified payout status
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.Title">
            <summary>
            Restricts results to those with given title 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.ProductId">
            <summary>
            Restricts results to those that includes given product
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.PublishedAtMin">
            <summary>
            Restricts results to those published after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.PublishedAtMax">
            <summary>
            Restricts results to those published before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionCountFilter.PublishedStatus">
            <summary>
            Restricts results to those with the given published status. Known values: published, unpublished, any. Default: any.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.SmartCollectionListFilter">
            <summary>
            Options for filtering lists of Smart Collections.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.Ids">
            <summary>
            Show only those with ids in the list.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.Title">
            <summary>
            Filter to smart collections with the given title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.Handle">
            <summary>
            Filter by smart collection handle.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.ProductId">
            <summary>
            Filter to smart collections that includes given product.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.UpdatedAtMin">
            <summary>
            Show those updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.UpdatedAtMax">
            <summary>
            Show those last updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.PublishedAtMin">
            <summary>
            Show those published at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.PublishedAtMax">
            <summary>
            Show those last published at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.SmartCollectionListFilter.PublishedStatus">
            <summary>
            Restrict results to those with a given published status. Known values: published, unpublished, any. Default: any. 
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ThemeListFilter">
            <summary>
            Options for filtering lists of Themes. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ThemeListFilter.Fields">
            <summary>
            Retrieve only certain fields, specified by a comma-separated list of field names. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.TransactionGetFilter.Fields">
            <summary>
            Retrieve only certain fields, specified by a comma-separated list of field names. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.TransactionGetFilter.InShopCurrency">
            <summary>
            Show amounts in the shop currency. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.TransactionListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.TransactionListFilter.Fields">
            <summary>
            Retrieve only certain fields, specified by a comma-separated list of field names. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.TransactionListFilter.InShopCurrency">
            <summary>
            Show amounts in the shop currency. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.UsageChargeListFilter.Fields">
            <summary>
            Retrieve only certain fields, specified by a comma-separated list of field names. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookCountFilter.Address">
            <summary>
            Restricts results to those with the given address. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookCountFilter.Topic">
            <summary>
            Restricts results to those with the given topic. 
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.WebhookFilter">
            <summary>
            Options for filtering <see cref="!:WebhookService.ListAsync(WebhookFilter)" /> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookFilter.Address">
            <summary>
            An optional filter for the address property. When used, the method will only return webhooks with the given address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookFilter.Topic">
            <summary>
            An optional filter for the topic property. When used, the method will only return webhooks with the given topic. A full list of topics can be found at https://help.shopify.com/api/reference/webhook.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.WebhookListFilter">
            <summary>
            Options for filtering lists of Webhooks. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.Address">
            <summary>
            Restricts results to those with the given address. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.Topic">
            <summary>
            Restricts results to those with the given topic. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.CreatedAtMin">
            <summary>
            Show those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.CreatedAtMax">
            <summary>
            Show those created at or after date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.UpdatedAtMin">
            <summary>
            Show those updated at or before date.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.WebhookListFilter.UpdatedAtMax">
            <summary>
            Show those last updated at or before date.
            </summary>
        </member>
        <member name="T:ShopifySharp.Infrastructure.Serializer">
            <summary>
            Contains JSON serialization settings and methods used by the rest of the ShopifySharp package.
            </summary>
        </member>
        <member name="T:ShopifySharp.Parameterizable">
            <summary>
            An abstract class for parameterizing certain objects.
            </summary>
        </member>
        <member name="M:ShopifySharp.Parameterizable.ToQueryParameters">
            <summary>
            Converts the object to an array of KVPs.
            </summary>
        </member>
        <member name="M:ShopifySharp.Parameterizable.ToSingleParameter(System.String,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Converts the given property and value to a KeyValuePair for use as a query parameter. Can be overriden to customize parameterization of a property.
            Will NOT be called by the <see cref="!:Parameterizable.ToParameters(ParameterType)"/> method if the value
            is null.
            </summary>
            <param name="propName">The name of the property. Will match the property's <see cref="T:Newtonsoft.Json.JsonPropertyAttribute"/> name —
            rather than the real property name — where applicable. Use <paramref name="property"/>.Name to get the real name.</param>
            <param name="value">The property's value.</param>
            <param name="property">The property itself.</param>
            <returns>The new parameter.</returns>
        </member>
        <member name="T:ShopifySharp.IRequestExecutionPolicy">
            <summary>
            Used to specify centralized logic that should run when executing shopify requests.
            It is most useful to implement retry logic, but it can also be used for other concerns (i.e. tracing)
            </summary>
        </member>
        <member name="M:ShopifySharp.IRequestExecutionPolicy.Run``1(ShopifySharp.Infrastructure.CloneableRequestMessage,ShopifySharp.ExecuteRequestAsync{``0})">
            <param name="baseRequest">The base request that was built by a service to execute.</param>
            <param name="executeRequestAsync">A delegate that executes the request you pass to it.</param>
        </member>
        <member name="T:ShopifySharp.RetryExecutionPolicy">
            <summary>
            See https://help.shopify.com/api/guides/api-call-limit
            </summary>
        </member>
        <member name="T:ShopifySharp.SmartRetryExecutionPolicy">
            <summary>
            A retry policy that attemps to pro-actively limit the number of requests that will result in a ShopifyRateLimitException
            by implementing the leaky bucket algorithm.
            For example: if 100 requests are created in parallel, only 40 should be immediately sent, and the subsequent 60 requests
            should be throttled at 1 per 500ms.
            </summary>
            <remarks>
            In comparison, the naive retry policy will issue the 100 requests immediately:
            60 requests will fail and be retried after 500ms,
            59 requests will fail and be retried after 500ms,
            58 requests will fail and be retried after 500ms.
            See https://help.shopify.com/api/guides/api-call-limit
            https://en.wikipedia.org/wiki/Leaky_bucket
            </remarks>
        </member>
        <member name="P:ShopifySharp.RequestResult`1.RawLinkHeaderValue">
            <summary>
            Only exists for list requests, will be null or empty for all others. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyException.RequestId">
            <summary>
            The XRequestId header returned by Shopify. Can be used when working with the Shopify support team to identify the failed request.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyException.Errors">
            <remarks>
            List is always initialized to ensure null reference errors won't be thrown when trying to check error messages.
            </remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyException.RawBody">
            <summary>
            The raw JSON string returned by Shopify.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyRateLimitException">
            <summary>
            An exception thrown when an API call has reached Shopify's rate limit.
            </summary>
        </member>
        <member name="T:ShopifySharp.AccessScopeService">
            <summary>
            A service for getting the access scopes associated with the access token
            </summary>
        </member>
        <member name="M:ShopifySharp.AccessScopeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the service.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.AccessScopeService.ListAsync">
            <summary>
            Retrieves a list of access scopes associated to the access token.
            </summary>
        </member>
        <member name="T:ShopifySharp.ApplicationCreditService">
            <summary>
            A service for offering credits for payments made via the Application Charge, Recurring Application Charge, and Usage Charge APIs.
            </summary>
        </member>
        <member name="M:ShopifySharp.ApplicationCreditService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ApplicationCreditService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ApplicationCreditService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.ApplicationCredit})">
            <summary>
            Gets a list of all past and present application credits.
            </summary>
        </member>
        <member name="M:ShopifySharp.ApplicationCreditService.ListAsync(ShopifySharp.Filters.ApplicationCreditListFilter)">
            <summary>
            Gets a list of all past and present application credits.
            </summary>
        </member>
        <member name="M:ShopifySharp.ApplicationCreditService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the application credit with the given id.
            </summary>
            <param name="id">The application credit's id.</param>
            <param name="fields">A comma-separated list of fields to include in the response.</param>
        </member>
        <member name="M:ShopifySharp.ApplicationCreditService.CreateAsync(ShopifySharp.ApplicationCredit)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ApplicationCredit"/>.
            </summary>
            <param name="credit">A new <see cref="T:ShopifySharp.ApplicationCredit"/>. Id should be set to null.</param>
        </member>
        <member name="T:ShopifySharp.ArticleService">
            <summary>
            A service for manipulating a blog's articles.
            </summary>
        </member>
        <member name="M:ShopifySharp.ArticleService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the service.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.ListAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.Article})">
            <summary>
            Gets a list of up to 250 articles belonging to the given blog.
            </summary>
        </member>
        <member name="M:ShopifySharp.ArticleService.ListAsync(System.Int32,ShopifySharp.Filters.ArticleListFilter)">
            <summary>
            Gets a list of up to 250 articles belonging to the given blog.
            </summary>
        </member>
        <member name="M:ShopifySharp.ArticleService.CountAsync(System.Int64,ShopifySharp.Filters.ArticleCountFilter)">
            <summary>
            Gets a count of the articles belonging to the given blog.
            </summary>
            <param name="blogId">The blog that the articles belong to.</param>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Gets an article with the given id.
            </summary>
            <param name="blogId">The blog that the article belongs to.</param>
            <param name="articleId">The article's id.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.CreateAsync(System.Int64,ShopifySharp.Article,System.Collections.Generic.IEnumerable{ShopifySharp.MetaField})">
            <summary>
            Creates a new article on the given blog.
            </summary>
            <param name="blogId">The blog that the article will belong to.</param>
            <param name="article">The article being created. Id should be null.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.MetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.UpdateAsync(System.Int64,System.Int64,ShopifySharp.Article,System.Collections.Generic.IEnumerable{ShopifySharp.MetaField})">
            <summary>
            Updates an article.
            </summary>
            <param name="blogId">The blog that the article belongs to.</param>
            <param name="articleId">Id of the object being updated.</param>
            <param name="article">The article being updated.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.MetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes an article with the given id.
            </summary>
            <param name="blogId">The blog that the article belongs to.</param>
            <param name="articleId">The article benig deleted.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.ListAuthorsAsync">
            <summary>
            Gets a list of all article authors.
            </summary>
        </member>
        <member name="M:ShopifySharp.ArticleService.ListTagsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all article tags.
            </summary>
            <param name="limit">The number of tags to return</param>
            <param name="popular">A flag to indicate only to a certain number of the most popular tags.</param>
        </member>
        <member name="M:ShopifySharp.ArticleService.ListTagsForBlogAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all article tags for the given blog.
            </summary>
            <param name="blogId">The blog that the tags belong to.</param>
            <param name="limit">The number of tags to return</param>
            <param name="popular">A flag to indicate only to a certain number of the most popular tags.</param>
        </member>
        <member name="T:ShopifySharp.AssetService">
            <summary>
            A service for manipulating Shopify's Assets API.
            </summary>
        </member>
        <member name="M:ShopifySharp.AssetService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.AssetService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.AssetService.GetAsync(System.Int64,System.String,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Asset"/> with the given id.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to. Assets themselves do not have ids.</param>
            <param name="key">The key value of the asset, e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Asset"/>.</returns>
        </member>
        <member name="M:ShopifySharp.AssetService.ListAsync(System.Int64,ShopifySharp.Filters.AssetListFilter)">
            <summary>
            Retrieves a list of all <see cref="T:ShopifySharp.Asset"/> objects. Listing theme assets only returns metadata about each asset.
            You need to request assets individually in order to get their contents.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.AssetService.CreateOrUpdateAsync(System.Int64,ShopifySharp.Asset)">
            <summary>
            Creates or updates a <see cref="T:ShopifySharp.Asset"/>. Both tasks use the same method due to the
            way Shopify API handles assets. If an asset has a unique <see cref="P:ShopifySharp.Asset.Key"/> value,
            it will be created. If not, it will be updated. Copy an asset by setting the
            <see cref="P:ShopifySharp.Asset.SourceKey"/> to the target's <see cref="P:ShopifySharp.Asset.Key"/> value.
            Note: This will not return the asset's <see cref="P:ShopifySharp.Asset.Value"/> property. You should
            use <see cref="M:ShopifySharp.AssetService.GetAsync(System.Int64,System.String,System.String)"/> to refresh the value after creating or updating.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <param name="asset">The asset.</param>
            <returns>The created or updated asset.</returns>
        </member>
        <member name="M:ShopifySharp.AssetService.DeleteAsync(System.Int64,System.String)">
            <summary>
            Deletes a <see cref="T:ShopifySharp.Asset"/> with the given key.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <param name="key">The key value of the asset, e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.</param>
        </member>
        <member name="M:ShopifySharp.AssetService.SetAssetQuerystring(ShopifySharp.Infrastructure.RequestUri,System.String,System.Int64)">
            <summary>
            Sets the proper querystring for getting or deleting a single asset.
            </summary>
            <param name="req">The request to modify.</param>
            <param name="key">The key value of the asset, e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.</param>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <returns>The request with the proper querystring.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.ParseRawQuerystring(System.String)">
            <remarks>
            Source for this method: https://stackoverflow.com/a/22046389
            </remarks>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticRequest(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}},System.String)">
            <summary>
            Determines if an incoming request is authentic.
            </summary>
            <param name="querystring">The collection of querystring parameters from the request. Hint: use Request.QueryString if you're calling this from an ASP.NET MVC controller.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticRequest(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Determines if an incoming request is authentic.
            </summary>
            <param name="querystring">A dictionary containing the keys and values from the request's querystring.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticRequest(System.String,System.String)">
            <summary>
            Determines if an incoming request is authentic.
            </summary>
            <param name="querystring">The request's raw querystring.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticProxyRequest(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}},System.String)">
            <summary>
            Determines if an incoming proxy page request is authentic. Conceptually similar to <see cref="!:IsAuthenticRequest(NameValueCollection, string)"/>,
            except that proxy requests use HMACSHA256 rather than MD5.
            </summary>
            <param name="querystring">The collection of querystring parameters from the request. Hint: use Request.QueryString if you're calling this from an ASP.NET MVC controller.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticProxyRequest(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Determines if an incoming proxy page request is authentic. Conceptually similar to <see cref="!:IsAuthenticRequest(NameValueCollection, string)"/>,
            except that proxy requests use HMACSHA256 rather than MD5.
            </summary>
            <param name="querystring">A dictionary containing the keys and values from the request's querystring.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticProxyRequest(System.String,System.String)">
            <summary>
            Determines if an incoming proxy page request is authentic. Conceptually similar to <see cref="!:IsAuthenticRequest(NameValueCollection, string)"/>,
            except that proxy requests use HMACSHA256 rather than MD5.
            </summary>
            <param name="querystring">The request's raw querystring.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticWebhook(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}},System.IO.Stream,System.String)">
            <summary>
            Determines if an incoming webhook request is authentic.
            </summary>
            <param name="requestHeaders">The request's headers. Hint: use Request.Headers if you're calling this from an ASP.NET MVC controller.</param>
            <param name="inputStream">The request's input stream. This method does NOT dispose the stream.
            Hint: use Request.InputStream if you're calling this from an ASP.NET MVC controller.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the webhook is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticWebhook(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}},System.String,System.String)">
            <summary>
            Determines if an incoming webhook request is authentic.
            </summary>
            <param name="requestHeaders">The request's headers. Hint: use Request.Headers if you're calling this from an ASP.NET MVC controller.</param>
            <param name="requestBody">The body of the request.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the webhook is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsAuthenticWebhook(System.Net.Http.Headers.HttpRequestHeaders,System.String,System.String)">
            <summary>
            Determines if an incoming webhook request is authentic.
            </summary>
            <param name="requestHeaders">The request's headers.</param>
            <param name="requestBody">The body of the request.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the webhook is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.IsValidShopDomainAsync(System.String)">
             <summary>
             A convenience function that tries to ensure that a given URL is a valid Shopify domain. It does this by making a HEAD request to the given domain, and returns true if the response contains an X-ShopId header.
            
             **Warning**: a domain could fake the response header, which would cause this method to return true.
            
             **Warning**: this method of validation is not officially supported by Shopify and could break at any time.
             </summary>
             <param name="url">The URL of the shop to check.</param>
             <returns>A boolean indicating whether the URL is valid.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.BuildAuthorizationUrl(System.Collections.Generic.IEnumerable{ShopifySharp.Enums.AuthorizationScope},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds an authorization URL for Shopify OAuth integration.
            </summary>
            <param name="scopes">An array of <see cref="!:ShopifyAuthorizationScope"/> — the permissions that your app needs to run.</param>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="redirectUrl">URL to redirect the user to after integration.</param>
            <param name="state">An optional, random string value provided by your application which is unique for each authorization request. During the OAuth callback phase, your application should check that this value matches the one you provided to this method.</param>
            <param name="grants">Requested grant types, which will change the type of access token granted upon OAuth completion. Only known grant type is "per-user", which will give an access token restricted to the permissions of the user accepting OAuth integration and will expire when that user logs out. Leave the grants array empty or null to receive a full access token that doesn't expire.</param>
            <returns>The authorization url.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.BuildAuthorizationUrl(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds an authorization URL for Shopify OAuth integration.
            </summary>
            <param name="scopes">An array of Shopify permission strings, e.g. 'read_orders' or 'write_script_tags'. These are the permissions that your app needs to run.</param>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="redirectUrl">URL to redirect the user to after integration.</param>
            <param name="state">An optional, random string value provided by your application which is unique for each authorization request. During the OAuth callback phase, your application should check that this value matches the one you provided to this method.</param>
            <param name="grants">Requested grant types, which will change the type of access token granted upon OAuth completion. Only known grant type is "per-user", which will give an access token restricted to the permissions of the user accepting OAuth integration and will expire when that user logs out. Leave the grants array empty or null to receive a full access token that doesn't expire.</param>
            <returns>The authorization url.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.Authorize(System.String,System.String,System.String,System.String)">
            <summary>
            Authorizes an application installation, generating an access token for the given shop.
            </summary>
            <param name="code">The authorization code generated by Shopify, which should be a parameter named 'code' on the request querystring.</param>
            <param name="myShopifyUrl">The store's *.myshopify.com URL, which should be a paramter named 'shop' on the request querystring.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>The shop access token.</returns>
        </member>
        <member name="M:ShopifySharp.AuthorizationService.AuthorizeWithResult(System.String,System.String,System.String,System.String)">
            <summary>
            Authorizes an application installation, generating an access token for the given shop.
            </summary>
            <param name="code">The authorization code generated by Shopify, which should be a parameter named 'code' on the request querystring.</param>
            <param name="myShopifyUrl">The store's *.myshopify.com URL, which should be a paramter named 'shop' on the request querystring.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>The authorization result.</returns>
        </member>
        <member name="T:ShopifySharp.BlogService">
            <summary>
            A service for interacting with a store's blogs (not blog posts).
            </summary>
        </member>
        <member name="M:ShopifySharp.BlogService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.BlogService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.BlogService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Blog})">
            <summary>
            Gets a list of up to 250 blogs belonging to the store.
            </summary>
        </member>
        <member name="M:ShopifySharp.BlogService.ListAsync(ShopifySharp.Filters.BlogListFilter)">
            <summary>
            Gets a list of up to 250 blogs belonging to the store.
            </summary>
        </member>
        <member name="M:ShopifySharp.BlogService.CountAsync">
            <summary>
            Gets a count of all blogs.
            </summary>
        </member>
        <member name="M:ShopifySharp.BlogService.CreateAsync(ShopifySharp.Blog,System.Collections.Generic.IEnumerable{ShopifySharp.MetaField})">
            <summary>
            Creates a new blog.
            </summary>
            <param name="blog">The blog being created. Id should be null.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.MetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.BlogService.UpdateAsync(System.Int64,ShopifySharp.Blog,System.Collections.Generic.IEnumerable{ShopifySharp.MetaField})">
            <summary>
            Updates a blog.
            </summary>
            <param name="blogId">Id of the object being updated.</param>
            <param name="blog">The updated blog.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.MetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.BlogService.GetAsync(System.Int64)">
            <summary>
            Gets a blog with the given id.
            </summary>
            <param name="id">The id of the blog you want to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.BlogService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a blog with the given id.
            </summary>
            <param name="id">The id of the blog you want to delete.</param>
        </member>
        <member name="T:ShopifySharp.CarrierService">
            <summary>
            A service for working with shipping carriers.
            </summary>
        </member>
        <member name="M:ShopifySharp.CarrierService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.CarrierService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CarrierService.ListAsync">
            <summary>
            Retrieve a list of all carrier services that are associated with the store.
            </summary>
        </member>
        <member name="M:ShopifySharp.CarrierService.CreateAsync(ShopifySharp.Carrier)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Carrier"/> Carrier
            </summary>
            <param name="carrier">A new <see cref="T:ShopifySharp.Carrier"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.Carrier"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CarrierService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Carrier"/> with the given id.
            </summary>
            <param name="carrierId">The id of the Carrier to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.Carrier"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CarrierService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a Carruer with the given Id.
            </summary>
            <param name="carrierId">The Carrier's Id.</param>
        </member>
        <member name="M:ShopifySharp.CarrierService.UpdateAsync(System.Int64,ShopifySharp.Carrier)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Carrier"/>.
            </summary>
            <param name="carrierId">Id of the Carrier being updated.</param>
            <param name="carrier">The <see cref="T:ShopifySharp.Carrier"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Carrier"/>.</returns>
        </member>
        <member name="T:ShopifySharp.ChargeService">
            <summary>
            A service for manipulating Shopify's ApplicationCharge API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ChargeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ChargeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ChargeService.CreateAsync(ShopifySharp.Charge)">
            <summary>
            Creates a <see cref="T:ShopifySharp.Charge"/>.
            </summary>
            <param name="charge">The <see cref="T:ShopifySharp.Charge"/> to create.</param>
            <returns>The new <see cref="T:ShopifySharp.Charge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ChargeService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Charge"/> with the given id.
            </summary>
            <param name="id">The id of the charge to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Charge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ChargeService.ListAsync(ShopifySharp.Filters.ChargeListFilter)">
            <summary>
            Retrieves a list of all past and present <see cref="T:ShopifySharp.Charge"/> objects.
            </summary>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.ChargeService.ActivateAsync(System.Int64)">
            <summary>
            Activates a <see cref="T:ShopifySharp.Charge"/> that the shop owner has accepted.
            </summary>
            <param name="id">The id of the charge to activate.</param>
        </member>
        <member name="T:ShopifySharp.CheckoutService">
            <summary>
            A service for working with abandoned checkouts.
            </summary>
        </member>
        <member name="M:ShopifySharp.CheckoutService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CheckoutService.CountAsync(ShopifySharp.Filters.CheckoutCountFilter)">
            <summary>
            Gets a count of all of the shop's orders.
            </summary>
            <param name="filter">Options for filtering the count.</param>
            <returns>The count of all orders for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.CheckoutService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Checkout})">
            <summary>
            Gets a list of up to 250 of the shop's abandoned checkouts.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.CheckoutService.ListAsync(ShopifySharp.Filters.CheckoutListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's abandoned checkouts.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.CheckoutService.CreateAsync(ShopifySharp.Checkout)">
            <summary>
            Creates a new Checkout.
            </summary>
        </member>
        <member name="M:ShopifySharp.CheckoutService.CompleteAsync(System.String)">
            <summary>
            Completes a checkout without requiring payment.
            </summary>
        </member>
        <member name="M:ShopifySharp.CheckoutService.GetAsync(System.String)">
            <summary>
            Gets an existing, processing or completed checkout.
            </summary>
        </member>
        <member name="M:ShopifySharp.CheckoutService.UpdateAsync(System.String,ShopifySharp.Checkout)">
            <summary>
            Updates an existing checkout based on the token id.
            </summary>
        </member>
        <member name="M:ShopifySharp.CheckoutService.ListShippingRatesAsync(System.String)">
            <summary>
            Retrieves a list of available shipping rates for the specified checkout. Implementers need to poll this endpoint until rates become available. Each shipping rate contains the checkout's 
            new subtotal price, total tax, and total price in the event that this shipping rate is selected. This can be used to update the UI without performing further API requests. To apply a 
            shipping rate, update the checkout's shipping line with the handle of the selected rate. 
            </summary>
        </member>
        <member name="T:ShopifySharp.CollectService">
            <summary>
            A service for manipulating mapping between Shopify products and collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.CollectService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.CustomerService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CollectService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Collect})">
            <summary>
            Gets a list of up to 250 of the shop's collects.
            </summary>
        </member>
        <member name="M:ShopifySharp.CollectService.ListAsync(ShopifySharp.Filters.CollectListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's collects.
            </summary>
        </member>
        <member name="M:ShopifySharp.CollectService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Collect"/> with the given id.
            </summary>
            <param name="collectId">The id of the collect to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Collect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CollectService.CreateAsync(ShopifySharp.Collect)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Collect"/> on the store. Map product to collection
            </summary>
            <param name="collect">A new <see cref="T:ShopifySharp.Collect"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.Collect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CollectService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a collect with the given Id.
            </summary>
            <param name="collectId">The product object's Id.</param>
        </member>
        <member name="T:ShopifySharp.CustomCollectionService">
            <summary>
            A service for manipulating mapping between custom collections and collections
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.CustomCollection})">
            <summary>
            Gets a list of up to 250 custom collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.ListAsync(ShopifySharp.Filters.CustomCollectionListFilter)">
            <summary>
            Gets a list of up to 250 custom collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.CreateAsync(ShopifySharp.CustomCollection)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.CustomCollection"/> Custom Collection
            </summary>
            <param name="customCollection">A new <see cref="T:ShopifySharp.CustomCollection"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.CustomCollection"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.CustomCollection"/> with the given id.
            </summary>
            <param name="customCollectionId">The id of the custom collection to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.CustomCollection"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a custom collection with the given Id.
            </summary>
            <param name="customCollectionId">The custom collection's Id.</param>
        </member>
        <member name="M:ShopifySharp.CustomCollectionService.UpdateAsync(System.Int64,ShopifySharp.CustomCollection)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.CustomCollection"/>.
            </summary>
            <param name="customCollectionId">Id of the object being updated.</param>
            <param name="customCollection">The <see cref="T:ShopifySharp.CustomCollection"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.CustomCollection"/>.</returns>
        </member>
        <member name="T:ShopifySharp.CustomerAddressService">
            <summary>
            A service for manipulating Shopify customers addresses.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.ListAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.Address})">
            <summary>
            Gets a list of up to 250 of the shop customer's addresses.
            </summary>
            <param name="customerId">The id of the customer to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Address"/> with the given id.
            </summary>
            <param name="customerId">The id of the customer to retrieve.</param>
            <param name="addressId">The id of the customer address to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Address"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.CreateAsync(System.Int64,ShopifySharp.Address)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Address"/> on the store.
            </summary>
            <param name="customerId">The id of the customer to create address for.</param>
            <param name="address">A new <see cref="T:ShopifySharp.Address"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.Address"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.UpdateAsync(System.Int64,System.Int64,ShopifySharp.Address)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Address"/>.
            </summary>
            <param name="customerId">Id of the customer object being updated.</param>
            <param name="addressId">Id of the address object being updated.</param>
            <param name="address">The <see cref="T:ShopifySharp.Address"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Customer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes a address with the given Id from a customer.
            </summary>
            <param name="customerId">The customer object's Id.</param>
            <param name="addressId">The address object's Id.</param>
        </member>
        <member name="M:ShopifySharp.CustomerAddressService.SetDefault(System.Int64,System.Int64)">
            <summary>
            Sets the specified address as the default for a customer
            </summary>
            <param name="customerId">The customer object's Id.</param>
            <param name="addressId">The address object's Id.</param>
            <returns></returns>
        </member>
        <member name="T:ShopifySharp.CustomerSavedSearchService">
            <summary>
            A service for manipulating Shopify saved searches.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.CustomerService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.CountAsync(ShopifySharp.Filters.CustomerSavedSearchCountFilter)">
            <summary>
            Gets a count of all of the shop's customers.
            </summary>
            <returns>The count of all customers for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.CustomerSavedSearch})">
            <summary>
            Gets a list of up to 250 of the shop's customer saved searches.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.ListAsync(ShopifySharp.Filters.CustomerSavedSearchListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's customer saved searches.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Customer"/>s from the search with the given id.
            </summary>
            <param name="customerSearchId">The id of the customer to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Customer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.CreateAsync(ShopifySharp.CustomerSavedSearch)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Customer"/> on the store.
            </summary>
            <param name="customerSavedSearch">A new <see cref="T:ShopifySharp.CustomerSavedSearch"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.Customer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.UpdateAsync(System.Int64,ShopifySharp.CustomerSavedSearch)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.CustomerSavedSearch"/>.
            </summary>
            <param name="customerSavedSearchId">Id of the object being updated.</param>
            <param name="customerSavedSearch">The <see cref="T:ShopifySharp.CustomerSavedSearch"/> to update.</param>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a customer with the given Id.
            </summary>
            <param name="customerSavedSearchId">The customer object's Id.</param>
        </member>
        <member name="M:ShopifySharp.CustomerSavedSearchService.GetCustomersFromSavedSearchAsync(System.Int64,ShopifySharp.Filters.CustomerSavedSearchFilter)">
            <summary>
            Returns a list of all <see cref="T:ShopifySharp.Customer"/> that are in the saved search.
            </summary>
            <param name="customerSavedSearchId">Id of the Customer Saved Search.</param>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="T:ShopifySharp.CustomerCreateOptions">
            <summary>
            Options for creating a <see cref="T:ShopifySharp.Customer"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerCreateOptions.SendEmailInvite">
            <summary>
            Whether an email invite should be sent to the new customer. Default is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerCreateOptions.SendWelcomeEmail">
            <summary>
            Whether a welcome email should be sent to the new customer. Default is null.
            </summary>
        </member>
        <member name="T:ShopifySharp.CustomerService">
            <summary>
            A service for manipulating Shopify customers.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.CustomerService.CountAsync">
            <summary>
            Gets a count of all of the shop's customers.
            </summary>
            <remarks>
            According to Shopify's documentation, the count endpoint does not support any parameters. 
            </remarks>
        </member>
        <member name="M:ShopifySharp.CustomerService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Customer})">
            <summary>
            Gets a list of up to 250 of the shop's customers.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerService.ListAsync(ShopifySharp.Filters.CustomerListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's customers.
            </summary>
        </member>
        <member name="M:ShopifySharp.CustomerService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Customer"/> with the given id.
            </summary>
            <param name="customerId">The id of the customer to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Customer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerService.SearchAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Customer})">
            <summary>
            Searches through a shop's customers for the given search query. NOTE: Assumes the <paramref name="query"/> and <paramref name="order"/> strings are not encoded.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.CustomerService.SearchAsync(ShopifySharp.Filters.CustomerSearchListFilter)">
            <summary>
            Searches through a shop's customers for the given search query. NOTE: Assumes the <paramref name="query"/> and <paramref name="order"/> strings are not encoded.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.CustomerService.CreateAsync(ShopifySharp.Customer,ShopifySharp.CustomerCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Customer"/> on the store.
            </summary>
            <param name="customer">A new <see cref="T:ShopifySharp.Customer"/>. Id should be set to null.</param>
            <param name="options">Options for creating the customer.</param>
            <returns>The new <see cref="T:ShopifySharp.Customer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerService.UpdateAsync(System.Int64,ShopifySharp.Customer,ShopifySharp.CustomerUpdateOptions)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Customer"/>.
            </summary>
            <param name="customerId">Id of the object being updated.</param>
            <param name="customer">The <see cref="T:ShopifySharp.Customer"/> to update.</param>
            <param name="options">Options for updating the customer.</param>
            <returns>The updated <see cref="T:ShopifySharp.Customer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.CustomerService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a customer with the given Id.
            </summary>
            <param name="customerId">The customer object's Id.</param>
        </member>
        <member name="M:ShopifySharp.CustomerService.SendInviteAsync(System.Int64,ShopifySharp.CustomerInvite)">
            <summary>
            Send an invite by email to activate a customers account.
            </summary>
            <param name="customerId">The customer object's Id.</param>
            <param name="invite">Options for the invite email request</param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.CustomerService.GetAccountActivationUrl(System.Int64)">
            <summary>
            Generate and retrieve an account activation URL for a customer who is not yet enabled.
            This is useful if you've imported a large number of customers and want to send them activation emails all at once (using this approach, you'll need to generate and send the activation emails yourself).
            The account activation URL generated by this endpoint is one time use and will expire after 7 days.
            If you make a new POST request to this endpoint, a new URL will be generated which will be again valid for 7 days, but the previous URL will no longer be valid.
            </summary>
            <param name="customerId">The customer object's Id.</param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.CustomerService.ListOrdersForCustomerAsync(System.Int64,ShopifySharp.Filters.CustomerOrderListFilter)">
            <summary>
            Gets a list of the customer's orders.
            </summary>
            <param name="customerId">The id of the customer to list orders for.</param>
            <param name="filter">Options for filtering the result.</param>
            <remarks>
            Previously this was part of the OrderService, and was documented under the Orders API in Shopify.
            Shopify appears to have moved it to the Customers API.
            https://shopify.dev/docs/admin-api/rest/reference/customers/customer#orders-2020-01
            This list does not appear to be paginated. 
            </remarks>
        </member>
        <member name="T:ShopifySharp.CustomerUpdateOptions">
            <summary>
            Options for updating a <see cref="T:ShopifySharp.Customer"/>. 
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerUpdateOptions.Password">
            <summary>
            An optional password for the user. Default is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.CustomerUpdateOptions.PasswordConfirmation">
            <summary>
            Should be set and match <see cref="P:ShopifySharp.CustomerUpdateOptions.Password"/>. Default is null.
            </summary>
        </member>
        <member name="T:ShopifySharp.DiscountCodeService">
            <summary>
            A service for manipulating Shopify discount codes.
            </summary>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.ListAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.PriceRuleDiscountCode})">
            <summary>
            Gets a list of up to 250 of the discount codes belonging to the price rule.
            </summary>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.ListAsync(System.Int64,ShopifySharp.Filters.PriceRuleDiscountCodeListFilter)">
            <summary>
            Gets a list of up to 250 of the discount codes belonging to the price rule.
            </summary>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.PriceRuleDiscountCode"/> with the given id.
            </summary>
            <param name="priceRuleId">The id of the associated price rule.</param>
            <param name="discountId">The id of the discount to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.PriceRuleDiscountCode"/>.</returns>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.CreateAsync(System.Int64,ShopifySharp.PriceRuleDiscountCode)">
            <summary>
            Creates a new discount code.
            </summary>
            <param name="priceRuleId">Id of an existing price rule.</param>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.UpdateAsync(System.Int64,ShopifySharp.PriceRuleDiscountCode)">
            <summary>
            Updates the given object.
            </summary>
            <param name="priceRuleId">The Id of the Price Rule being updated.</param>
            <param name="code">The code being updated.</param>
        </member>
        <member name="M:ShopifySharp.DiscountCodeService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Removes the discount with the specified Id.
            </summary>
            /// <param name="priceRuleId">The price rule object's Id.</param>
            <param name="discountId">The discount object's Id.</param>
        </member>
        <member name="T:ShopifySharp.DraftOrderService">
            <summary>
            A service for manipulating Shopify draft orders.
            </summary>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.CountAsync(ShopifySharp.Filters.DraftOrderCountFilter)">
            <summary>
            Retrieves a count of the shop's draft orders. 
            </summary>
            <param name="filter">Options for filtering the count.</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.DraftOrder})">
            <summary>
            Gets a list of up to 250 of the shop's draft orders.
            </summary>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.ListAsync(ShopifySharp.Filters.DraftOrderListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's draft orders.
            </summary>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the object with the given id.
            </summary>
            <param name="id">The id of the object to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.CreateAsync(ShopifySharp.DraftOrder,System.Boolean)">
            <summary>
            Creates a new draft order.
            </summary>
            <param name="order">A new DraftOrder. Id should be set to null.</param>
            <param name="useCustomerDefaultAddress">Optional boolean that you can send as part of a draft order object to load customer shipping information. Defaults to false.</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.UpdateAsync(System.Int64,ShopifySharp.DraftOrder)">
            <summary>
            Updates the draft order with the given id.
            </summary>
            <param name="id">The id of the item being updated.</param>
            <param name="order">The updated draft order.</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.DeleteAsync(System.Int64)">
            <summary>
            Deletes the draft order with the given id.
            </summary>
            <param name="id">The id of the item being deleted.</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.CompleteAsync(System.Int64,System.Boolean)">
            <summary>
            Completes the draft order, transitioning it to a full order.
            </summary>
            <param name="id">The id of the item being completed.</param>
            <param name="paymentPending">A bool indicating whether payment is pending or not. True if payment is pending, false if payment is not pending and order has been paid. Defaults to false (payment not pending).</param>
        </member>
        <member name="M:ShopifySharp.DraftOrderService.SendInvoiceAsync(System.Int64,ShopifySharp.DraftOrderInvoice)">
            <summary>
            Send an invoice for the draft order.
            </summary>
            <param name="id">The id of the item with the invoice.</param>
        </member>
        <member name="T:ShopifySharp.EventService">
            <summary>
            A service for getting Shopify Events
            Reference: https://help.shopify.com/api/reference/event
            </summary>
        </member>
        <member name="M:ShopifySharp.EventService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.EventService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.EventService.CountAsync(ShopifySharp.Filters.EventCountFilter)">
            <summary>
            Gets a count of all site events.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.EventService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Event"/> with the given id.
            </summary>
            <param name="eventId">The id of the event to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Event"/>.</returns>
        </member>
        <member name="M:ShopifySharp.EventService.ListAsync(System.Int64,System.String,ShopifySharp.Filters.ListFilter{ShopifySharp.Event})">
            <summary>
            Returns a list of events for the given subject and subject type. A full list of supported subject types can be found at https://help.shopify.com/api/reference/event
            </summary>
            <param name="subjectId">Restricts results to just one subject item, e.g. all changes on a product.</param>
            <param name="subjectType">The subject's type, e.g. 'Order' or 'Product'. Known subject types are 'Articles', 'Blogs', 'Custom_Collections', 'Comments', 'Orders', 'Pages', 'Products' and 'Smart_Collections'.  A current list of subject types can be found at https://help.shopify.com/api/reference/event </param>
        </member>
        <member name="M:ShopifySharp.EventService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Event})">
            <summary>
            Returns a list of events.
            </summary>
        </member>
        <member name="M:ShopifySharp.EventService.ListAsync(System.Int64,System.String,ShopifySharp.Filters.EventListFilter)">
            <summary>
            Returns a list of events for the given subject and subject type. A full list of supported subject types can be found at https://help.shopify.com/api/reference/event
            </summary>
            <param name="subjectId">Restricts results to just one subject item, e.g. all changes on a product.</param>
            <param name="subjectType">The subject's type, e.g. 'Order' or 'Product'. Known subject types are 'Articles', 'Blogs', 'Custom_Collections', 'Comments', 'Orders', 'Pages', 'Products' and 'Smart_Collections'.  A current list of subject types can be found at https://help.shopify.com/api/reference/event </param>
        </member>
        <member name="M:ShopifySharp.EventService.ListAsync(ShopifySharp.Filters.EventListFilter)">
            <summary>
            Returns a list of events.
            </summary>
        </member>
        <member name="T:ShopifySharp.FulfillmentEventService">
            <summary>
            A service for manipulating Shopify fulfillment events.
            </summary>
        </member>
        <member name="M:ShopifySharp.FulfillmentEventService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.FulfillmentEventService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentEventService.ListAsync(System.Int64,System.Int64)">
            <summary>
            Get a list of all fulfillment events for a fulfillment
            </summary>
            <param name="orderId">The order id to which the fulfillment belongs to.</param>
            <param name="fulfillmentId">The fulfillment id to which the fulfillment events belong to.</param>
            <returns>The list of fulfillment events for the given fulfillment.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentEventService.GetAsync(System.Int64,System.Int64,System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.FulfillmentEvent"/> with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillment belongs to.</param>
            <param name="fulfillmentId">The id of the fulfillment to which the event belongs to.</param>
            <param name="fulfillmentEventId">The id of the fulfillment event to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.FulfillmentEvent"/>.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentEventService.CreateAsync(System.Int64,System.Int64,ShopifySharp.FulfillmentEvent)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.FulfillmentEvent"/> on the fulfillment.
            </summary>
            <param name="event">A new <see cref="T:ShopifySharp.Fulfillment"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.FulfillmentEvent"/>.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentEventService.DeleteAsync(System.Int64,System.Int64,System.Int64)">
            <summary>
            Deletes the <see cref="T:ShopifySharp.FulfillmentEvent"/> with the given Id.
            </summary>
            <param name="orderId">The order id to which the fulfillment belongs to.</param>
            <param name="fulfillmentId">The id of the fulfillment to which the event belongs to.</param>
            <param name="fulfillmentEventId">The id of the fulfillment event to retrieve.</param>
        </member>
        <member name="T:ShopifySharp.FulfillmentServiceService">
            <summary>
            A service for manipulating Shopify fulfillments.
            </summary>
        </member>
        <member name="M:ShopifySharp.FulfillmentServiceService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentServiceService.ListAsync(ShopifySharp.Filters.FulfillmentServiceListFilter)">
            <summary>
            Gets a list of your app's FulfillmentServices.
            </summary>
            <param name="scope">Set scope to all to retrieve all of the store's fulfillment services</param>
            <returns>The list of fulfillment services matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentServiceService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.FulfillmentServiceEntity"/> with the given id.
            </summary>
            <param name="fulfillmentServiceId">The if of the fulfillment service.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Fulfillment"/>.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ShopifySharp.FulfillmentServiceService.CreateAsync(ShopifySharp.FulfillmentServiceEntity)" -->
        <member name="M:ShopifySharp.FulfillmentServiceService.UpdateAsync(System.Int64,ShopifySharp.FulfillmentServiceEntity)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.FulfillmentServiceEntity"/>.
            </summary>
            <param name="fulfillmentServiceId">Id of the fulfillment service being updated.</param>
            <param name="fulfillmentServiceEntity">The <see cref="T:ShopifySharp.FulfillmentServiceEntity"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.FulfillmentServiceEntity"/>.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentServiceService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a fulfillment service with the given Id.
            </summary>
            <param name="fulfillmentServiceId">The fulfillment service object's Id.</param>
        </member>
        <member name="T:ShopifySharp.FulfillmentService">
            <summary>
            A service for manipulating Shopify fulfillments.
            </summary>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.FulfillmentService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.CountAsync(System.Int64,ShopifySharp.Filters.FulfillmentCountFilter)">
            <summary>
            Gets a count of all of the order's fulfillments.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="filter">Options for filtering the count.</param>
            <returns>The count of all fulfillments for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.ListAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.Fulfillment})">
            <summary>
            Gets a list of up to 250 of the order's fulfillments.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.ListAsync(System.Int64,ShopifySharp.Filters.FulfillmentListFilter)">
            <summary>
            Gets a list of up to 250 of the order's fulfillments.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Fulfillment"/> with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The id of the Fulfillment to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Fulfillment"/>.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.CreateAsync(System.Int64,ShopifySharp.Fulfillment)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Fulfillment"/> on the order.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillment">A new <see cref="T:ShopifySharp.Fulfillment"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.Fulfillment"/>.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.UpdateAsync(System.Int64,System.Int64,ShopifySharp.Fulfillment)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Fulfillment"/>.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">Id of the object being updated.</param>
            <param name="fulfillment">The <see cref="T:ShopifySharp.Fulfillment"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Fulfillment"/>.</returns>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.CompleteAsync(System.Int64,System.Int64)">
            <summary>
            Completes a pending fulfillment with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The fulfillment's id.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.CancelAsync(System.Int64,System.Int64)">
            <summary>
            Cancels a pending fulfillment with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The fulfillment's id.</param>
        </member>
        <member name="M:ShopifySharp.FulfillmentService.OpenAsync(System.Int64,System.Int64)">
            <summary>
            Opens a pending fulfillment with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The fulfillment's id.</param>
        </member>
        <member name="T:ShopifySharp.GiftCardAdjustmentService">
            <summary>
            A service for adjusting existing Shopify gift cards.
            </summary>
        </member>
        <member name="M:ShopifySharp.GiftCardAdjustmentService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.GiftCardAdjustmentService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.GiftCardAdjustmentService.ListAsync(System.Int64)">
            <summary>
            Gets a list of gift card adjustments belonging to the given gift card.
            </summary>
            <param name="giftCardId">The gift card that the adjustment was applied to.</param>
        </member>
        <member name="M:ShopifySharp.GiftCardAdjustmentService.GetAsync(System.Int64,System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.GiftCardAdjustment"/> with the given id.
            </summary>
            <param name="giftCardId">The gift card that the adjustment was applied to.</param>
            <param name="adjustmentId">The id of the adjustment to retrieve.</param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.GiftCardAdjustmentService.CreateAsync(System.Int64,ShopifySharp.GiftCardAdjustment)">
            <summary>
            Apply an adjustment to an existing gift card <see cref="T:ShopifySharp.GiftCardAdjustment"/>
            </summary>
            <param name="giftCardId">The gift card that the adjustment was applied to.</param>
            <param name="adjustment">A new <see cref="T:ShopifySharp.GiftCardAdjustment"/>. Signed amount and note should be the only properties set.</param>
            <returns></returns>
        </member>
        <member name="T:ShopifySharp.GiftCardService">
            <summary>
            A service for manipulating Shopify gift cards.
            </summary>
        </member>
        <member name="M:ShopifySharp.GiftCardService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.GiftCardService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.GiftCardService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.GiftCard})">
            <summary>
            Gets a list of up to 250 of the gift cards.
            </summary>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.GiftCardService.ListAsync(ShopifySharp.Filters.GiftCardListFilter)">
            <summary>
            Gets a list of up to 250 of the gift cards.
            </summary>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.GiftCardService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.GiftCard"/> with the given id.
            </summary>
            <param name="giftCardId">The id of the GiftCard to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.GiftCard"/>.</returns>
        </member>
        <member name="M:ShopifySharp.GiftCardService.CreateAsync(ShopifySharp.GiftCard)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.GiftCard"/>.
            </summary>
            <param name="giftCard">A new <see cref="T:ShopifySharp.GiftCard"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.GiftCard"/>.</returns>
        </member>
        <member name="M:ShopifySharp.GiftCardService.UpdateAsync(System.Int64,ShopifySharp.GiftCard)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.GiftCard"/>.
            </summary>
            <param name="giftCardId">Id of the object being updated.</param>
            <param name="giftCard">The <see cref="T:ShopifySharp.GiftCard"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.GiftCard"/>.</returns>
        </member>
        <member name="M:ShopifySharp.GiftCardService.DisableAsync(System.Int64)">
            <summary>
            Disables the <see cref="T:ShopifySharp.GiftCard"/> with the given id.
            </summary>
            <param name="giftCardId">The id of the GiftCard to disable.</param>
            <returns>The <see cref="T:ShopifySharp.GiftCard"/>.</returns>
        </member>
        <member name="M:ShopifySharp.GiftCardService.SearchAsync(ShopifySharp.Filters.GiftCardSearchFilter)">
            <summary>
            Search for gift cards matching supplied query
            </summary>
            <param name="filter">Options for searching and filtering the results.</param>
        </member>
        <member name="T:ShopifySharp.GraphService">
            <summary>
            A service for using or manipulating Shopify's Graph API.
            </summary>
        </member>
        <member name="M:ShopifySharp.GraphService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.GraphService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.GraphService.PostAsync(System.String)">
            <summary>
            Executes a Graph API Call.
            </summary>
            <param name="body">The query you would like to execute. Please see documentation for formatting.</param>
            <returns>A JToken containing the data from the request.</returns>
        </member>
        <member name="M:ShopifySharp.GraphService.PostAsync(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Executes a Graph API Call.
            </summary>
            <param name="body">The query you would like to execute, as a JToken. Please see documentation for formatting.</param>
            <returns>A JToken containing the data from the request.</returns>
        </member>
        <member name="M:ShopifySharp.GraphService.SendAsync(ShopifySharp.Infrastructure.RequestUri,System.Net.Http.HttpContent)">
            <summary>
            Content agnostic way to send the request, regardless of Json or GraphQL.
            </summary>
            <param name="req">The RequestUri.</param>
            <param name="content">The HttpContent, be it GraphQL or Json.</param>
            <returns>A JToken containing the data from the request.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ShopifySharp.GraphService.CheckForErrors(ShopifySharp.RequestResult{Newtonsoft.Json.Linq.JToken})" -->
        <member name="T:ShopifySharp.InventoryItemService">
            <summary>
            A service for manipulating a Shopify inventory items.
            </summary>
        </member>
        <member name="M:ShopifySharp.InventoryItemService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.InventoryItemService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.InventoryItemService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.InventoryItem})">
            <summary>
            Gets a list of inventory items.
            </summary>
            <param name="ids">Show only inventory items specified by a list of IDs. Maximum: 100.</param>
        </member>
        <member name="M:ShopifySharp.InventoryItemService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.InventoryItem"/> with the given id.
            </summary>
            <param name="inventoryItemId">The id of the inventory item to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.InventoryItemService.UpdateAsync(System.Int64,ShopifySharp.InventoryItem)">
            <summary>
            Updates an existing <see cref="T:ShopifySharp.InventoryItem"/>.
            </summary>
            <param name="inventoryItemId">The id of the inventory item to retrieve.</param>
        </member>
        <member name="T:ShopifySharp.InventoryLevelService">
            <summary>
            A service for manipulating a Shopify inventory items.
            </summary>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.InventoryLevelService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.InventoryLevel})">
            <summary>
            Gets a list of inventory items. 
            </summary>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.ListAsync(ShopifySharp.Filters.InventoryLevelListFilter)">
            <summary>
            Gets a list of inventory items
            </summary>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes inventory for an item at specified location.  All items must keep inventory at at least one location.
            </summary>
            <param name="inventoryItemId">The ID of the inventory item.</param>
            <param name="locationId">The ID of the location that the inventory level belongs to.</param>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.SetAsync(ShopifySharp.InventoryLevel,System.Boolean)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.InventoryLevel"/>.
            </summary>
            <param name="updatedInventoryLevel">The updated <see cref="T:ShopifySharp.InventoryLevel"/></param>
            <param name="disconnectIfNecessary">Whether inventory for any previously connected locations will be set to 0 and the locations disconnected. This property is ignored when no fulfillment service is involved.</param>
            <returns>The updated <see cref="T:ShopifySharp.InventoryLevel"/></returns>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.AdjustAsync(ShopifySharp.InventoryLevelAdjust)">
            <summary>
            Adjusts the given <see cref="T:ShopifySharp.InventoryLevel"/>.
            </summary>
            <param name="updatedInventoryLevel">The updated <see cref="T:ShopifySharp.InventoryLevel"/></param>
            <returns>The updated <see cref="T:ShopifySharp.InventoryLevel"/></returns>
        </member>
        <member name="M:ShopifySharp.InventoryLevelService.ConnectAsync(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Connect an inventory item to a location
            </summary>
            <param name="inventoryItemId">The ID of the inventory item</param>
            <param name="locationId">The ID of the location that the inventory level belongs to</param>
            <param name="relocateIfNecessary">Whether inventory for any previously connected locations will be relocated. This property is ignored when no fulfillment service location is involved</param>
            <returns>The new <see cref="T:ShopifySharp.InventoryLevel"/>.</returns>
        </member>
        <member name="T:ShopifySharp.LocationService">
            <summary>
            A service for manipulating Shopify's Location API.
            </summary>
        </member>
        <member name="M:ShopifySharp.LocationService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.LocationService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.LocationService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Location"/> with the given id.
            </summary>
            <param name="id">The id of the charge to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.Location"/>.</returns>
        </member>
        <member name="M:ShopifySharp.LocationService.ListAsync">
            <summary>
            Retrieves a list of all <see cref="T:ShopifySharp.Location"/> objects.
            </summary>
            <returns>The list of <see cref="T:ShopifySharp.Location"/> objects.</returns>
        </member>
        <member name="T:ShopifySharp.MetaFieldService">
            <summary>
            A service for manipulating Shopify metafields.
            </summary>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.MetaFieldService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.CountAsync">
            <summary>
            Gets a count of the metafields on the shop itself.
            </summary>
            <remarks>
            According to Shopify's documentation, this endpoint does not currently support any additional filter parameters for counting.
            </remarks>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.CountAsync(System.Int64,System.String)">
            <summary>
            Gets a count of the metafields for the given entity type and filter options.
            </summary>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <remarks>
            According to Shopify's documentation, this endpoint does not currently support any additional filter parameters for counting.
            </remarks>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.CountAsync(System.Int64,System.String,System.Int64,System.String)">
            <summary>
            Gets a count of the metafields for the given entity type and filter options.
            </summary>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="parentResourceType">The type of shopify parent resource to obtain metafields for. This could be blogs, products.</param>
            <param name="parentResourceId">The Id for the resource type.</param>
            <remarks>
            According to Shopify's documentation, this endpoint does not currently support any additional filter parameters for counting.
            </remarks>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.MetaField})">
            <summary>
            Gets a list of the metafields for the shop itself.
            </summary>
            <param name="filter">Options to filter the results.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.ListAsync(System.Int64,System.String,ShopifySharp.Filters.ListFilter{ShopifySharp.MetaField})">
            <summary>
            Gets a list of the metafields for the given entity type and filter options.
            </summary>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="filter">Options to filter the results.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.ListAsync(System.Int64,System.String,System.Int64,System.String,ShopifySharp.Filters.ListFilter{ShopifySharp.MetaField})">
            <summary>
            Gets a list of the metafields for the given entity type and filter options.
            </summary>
            <param name="parentResourceType">The type of shopify parentresource to obtain metafields for. This could be blogs, products.</param>
            <param name="parentResourceId">The Id for the parent resource type.</param>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="filter">Options to filter the results.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.ListAsync(ShopifySharp.Filters.MetaFieldFilter)">
            <summary>
            Gets a list of the metafields for the shop itself.
            </summary>
            <param name="filter">Options to filter the results.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.ListAsync(System.Int64,System.String,ShopifySharp.Filters.MetaFieldFilter)">
            <summary>
            Gets a list of the metafields for the given entity type and filter options.
            </summary>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="filter">Options to filter the results.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.ListAsync(System.Int64,System.String,System.Int64,System.String,ShopifySharp.Filters.MetaFieldFilter)">
            <summary>
            Gets a list of the metafields for the given entity type and filter options.
            </summary>
            <param name="parentResourceType">The type of shopify parentresource to obtain metafields for. This could be blogs, products.</param>
            <param name="parentResourceId">The Id for the parent resource type.</param>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="filter">Options to filter the results.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the metafield with the given id.
            </summary>
            <param name="metafieldId">The id of the metafield to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.CreateAsync(ShopifySharp.MetaField)">
            <summary>
            Creates a new metafield on the shop itself.
            </summary>
            <param name="metafield">A new metafield. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.CreateAsync(ShopifySharp.MetaField,System.Int64,System.String,System.Int64,System.String)">
            <summary>
            Creates a new metafield on the given entity.
            </summary>
            <param name="metafield">A new metafield. Id should be set to null.</param>
            <param name="resourceId">The Id of the resource the metafield will be associated with. This can be variants, products, orders, customers, custom_collections, etc.</param>
            <param name="resourceType">The resource type the metaifeld will be associated with. This can be variants, products, orders, customers, custom_collections, etc.</param>
            <param name="parentResourceId">The Id of the parent resource the metafield will be associated with. This can be blogs, products.</param>
            <param name="parentResourceType">The resource type the metaifeld will be associated with. This can be articles, variants.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.CreateAsync(ShopifySharp.MetaField,System.Int64,System.String)">
            <summary>
            Creates a new metafield on the given entity.
            </summary>
            <param name="metafield">A new metafield. Id should be set to null.</param>
            <param name="resourceId">The Id of the resource the metafield will be associated with. This can be variants, products, orders, customers, custom_collections, etc.</param>
            <param name="resourceType">The resource type the metaifeld will be associated with. This can be variants, products, orders, customers, custom_collections, etc.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.UpdateAsync(System.Int64,ShopifySharp.MetaField)">
            <summary>
            Updates the given metafield.
            </summary>
            <param name="metafieldId">Id of the object being updated.</param>
            <param name="metafield">The metafield to update.</param>
        </member>
        <member name="M:ShopifySharp.MetaFieldService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a metafield with the given Id.
            </summary>
            <param name="metafieldId">The metafield object's Id.</param>
        </member>
        <member name="T:ShopifySharp.OrderRiskService">
            <summary>
            A service for manipulating Shopify order risks.
            </summary>
        </member>
        <member name="M:ShopifySharp.OrderRiskService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.OrderRiskService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.OrderRiskService.ListAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.OrderRisk})">
            <summary>
            Gets a list of all order risks for an order.
            </summary>
            <param name="orderId">The order the risks belong to.</param>
            <param name="filter">Options for filtering the request.</param>
        </member>
        <member name="M:ShopifySharp.OrderRiskService.GetAsync(System.Int64,System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.OrderRisk"/> with the given id.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="riskId">The id of the risk to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.OrderRiskService.CreateAsync(System.Int64,ShopifySharp.OrderRisk)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.OrderRisk"/> on the order.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="risk">A new <see cref="T:ShopifySharp.OrderRisk"/>. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.OrderRiskService.UpdateAsync(System.Int64,System.Int64,ShopifySharp.OrderRisk)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.OrderRisk"/>.
            </summary>
            <param name="orderRiskId">Id of the object being updated.</param>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="risk">The risk to update.</param>
        </member>
        <member name="M:ShopifySharp.OrderRiskService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes an order with the given Id.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="riskId">The risk's id.</param>
        </member>
        <member name="P:ShopifySharp.OrderCancelOptions.RefundAmount">
            <summary>
            Amount to refund (decimal ex: 21.20).
            If set, Shopify will attempt to void/refund the payment depending on the status.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderCancelOptions.Restock">
            <summary>
            Restock the items for this order back to your store.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderCancelOptions.Reason">
            <summary>
            The reason for the order cancellation
            Must be: customer, inventory, fraud or other.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderCancelOptions.SendCancellationReceipt">
            <summary>
            Send an email to the customer notifying them of the cancellation.
            </summary>
        </member>
        <member name="P:ShopifySharp.OrderCreateOptions.InventoryBehavior">
            <summary>
            The inventory behavior for the order. Known values are 'bypass', 'decrement_ignoring_policy' and 'decrement_obeying_policy'.
            </summary>
        </member>
        <member name="T:ShopifySharp.OrderService">
            <summary>
            A service for manipulating Shopify orders.
            </summary>
        </member>
        <member name="M:ShopifySharp.OrderService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.OrderService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.OrderService.CountAsync(ShopifySharp.Filters.OrderCountFilter)">
            <summary>
            Gets a count of all of the shop's orders.
            </summary>
            <param name="filter">Options for filtering the count.</param>
            <returns>The count of all orders for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Order})">
            <summary>
            Gets a list of up to 250 of the shop's orders.
            </summary>
            <param name="filter">Options for filtering the list.</param>
            <returns>The list of orders matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.ListAsync(ShopifySharp.Filters.OrderListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's orders.
            </summary>
            <param name="filter">Options for filtering the list.</param>
            <returns>The list of orders matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Order"/> with the given id.
            </summary>
            <param name="orderId">The id of the order to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Order"/>.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.CloseAsync(System.Int64)">
            <summary>
            Closes an order.
            </summary>
            <param name="id">The order's id.</param>
        </member>
        <member name="M:ShopifySharp.OrderService.OpenAsync(System.Int64)">
            <summary>
            Opens a closed order.
            </summary>
            <param name="id">The order's id.</param>
        </member>
        <member name="M:ShopifySharp.OrderService.CreateAsync(ShopifySharp.Order,ShopifySharp.OrderCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Order"/> on the store.
            </summary>
            <param name="order">A new <see cref="T:ShopifySharp.Order"/>. Id should be set to null.</param>
            <param name="options">Options for creating the order.</param>
            <returns>The new <see cref="T:ShopifySharp.Order"/>.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.UpdateAsync(System.Int64,ShopifySharp.Order)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Order"/>.
            </summary>
            <param name="orderId">Id of the object being updated.</param>
            <param name="order">The <see cref="T:ShopifySharp.Order"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Order"/>.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.DeleteAsync(System.Int64)">
            <summary>
            Deletes an order with the given Id.
            </summary>
            <param name="orderId">The order object's Id.</param>
        </member>
        <member name="M:ShopifySharp.OrderService.CancelAsync(System.Int64,ShopifySharp.OrderCancelOptions)">
            <summary>
            Cancels an order.
            </summary>
            <param name="orderId">The order's id.</param>
            <returns>The cancelled <see cref="T:ShopifySharp.Order"/>.</returns>
        </member>
        <member name="M:ShopifySharp.OrderService.GetMetaFieldsAsync(System.Int64)">
            <summary>
            Get MetaField's for an order.
            </summary>
            <param name="orderId">The order's id.</param>
            <returns>The set of <see cref="T:ShopifySharp.MetaField"/> for the order.</returns>
        </member>
        <member name="T:ShopifySharp.PageService">
            <summary>
            A service for manipulating Shopify pages.
            </summary>
        </member>
        <member name="M:ShopifySharp.PageService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.PageService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.PageService.CountAsync(ShopifySharp.Filters.PageCountFilter)">
            <summary>
            Gets a count of all of the shop's pages.
            </summary>
        </member>
        <member name="M:ShopifySharp.PageService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Page})">
            <summary>
            Gets a list of up to 250 of the shop's pages.
            </summary>
        </member>
        <member name="M:ShopifySharp.PageService.ListAsync(ShopifySharp.Filters.PageListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's pages.
            </summary>
        </member>
        <member name="M:ShopifySharp.PageService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Page"/> with the given id.
            </summary>
            <param name="pageId">The id of the page to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Page"/>.</returns>
        </member>
        <member name="M:ShopifySharp.PageService.CreateAsync(ShopifySharp.Page,ShopifySharp.PageCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Page"/> on the store.
            </summary>
            <param name="page">A new <see cref="T:ShopifySharp.Page"/>. Id should be set to null.</param>
            <param name="options">Options for creating the page.</param>
            <returns>The new <see cref="T:ShopifySharp.Page"/>.</returns>
        </member>
        <member name="M:ShopifySharp.PageService.UpdateAsync(System.Int64,ShopifySharp.Page)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Page"/>.
            </summary>
            <param name="pageId">Id of the object being updated.</param>
            <param name="page">The <see cref="T:ShopifySharp.Page"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Page"/>.</returns>
        </member>
        <member name="M:ShopifySharp.PageService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a page with the given Id.
            </summary>
            <param name="pageId">The page object's Id.</param>
        </member>
        <member name="M:ShopifySharp.PolicyService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.PolicyService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.PolicyService.ListAsync">
            <summary>
            Get the policies and their contents for a shop
            </summary>
        </member>
        <member name="T:ShopifySharp.PriceRuleService">
            <summary>
            A service for manipulating Shopify price rules.
            </summary>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.#ctor(System.String,System.String)">
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.PriceRule})">
            <summary>
            Gets a list of up to 250 of the shop's price rules.
            </summary>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.ListAsync(ShopifySharp.Filters.PriceRuleListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's price rules.
            </summary>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the object with the given id.
            </summary>
            <param name="id">The id of the object to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.CreateAsync(ShopifySharp.PriceRule)">
            <summary>
            Creates a new price rule.
            </summary>
            <param name="rule">A new price rule. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.UpdateAsync(System.Int64,ShopifySharp.PriceRule)">
            <summary>
            Updates the given object.
            </summary>
            <param name="id">Id of the object being updated.</param>
            <param name="rule">The updated rule.</param>
        </member>
        <member name="M:ShopifySharp.PriceRuleService.DeleteAsync(System.Int64)">
            <summary>
            Deletes the object with the given Id.
            </summary>
            <param name="id">The object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ProductImageService">
            <summary>
            A service for manipulating Shopify ProductImages.
            </summary>
        </member>
        <member name="M:ShopifySharp.ProductImageService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ProductImageService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ProductImageService.CountAsync(System.Int64,ShopifySharp.Filters.ProductImageCountFilter)">
            <summary>
            Gets a count of all of the shop's ProductImages.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ProductImageService.ListAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.ProductImage})">
            <summary>
            Gets a list of up to 250 of the shop's ProductImages.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
        </member>
        <member name="M:ShopifySharp.ProductImageService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ProductImage"/> with the given id.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="imageId">The id of the ProductImage to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ProductImage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ProductImageService.CreateAsync(System.Int64,ShopifySharp.ProductImage)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ProductImage"/>. If the new image has an <see cref="P:ShopifySharp.ProductImage.Attachment"/> string, it will be converted to the <see cref="P:ShopifySharp.ProductImage.Src"/>.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="image">The new <see cref="T:ShopifySharp.ProductImage"/>.</param>
            <returns>The new <see cref="T:ShopifySharp.ProductImage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ProductImageService.UpdateAsync(System.Int64,System.Int64,ShopifySharp.ProductImage)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ProductImage"/>.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="productImageId">Id of the object being updated.</param>
            <param name="image">The <see cref="T:ShopifySharp.ProductImage"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ProductImage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ProductImageService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes a ProductImage with the given Id.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="imageId">The ProductImage object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ProductVariantService">
            <summary>
            A service for manipulating a Shopify product's variants.
            </summary>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ProductVariantService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.CountAsync(System.Int64)">
            <summary>
            Gets a count of all variants belonging to the given product.
            </summary>
            <param name="productId">The product that the variants belong to.</param>
            <param name="filter">Options for filtering the result.</param>
            <remarks>
            According to Shopify's documentation, this endpoint does not currently support any additional filter parameters for counting.
            </remarks>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.ListAsync(System.Nullable{System.Int64},ShopifySharp.Filters.ListFilter{ShopifySharp.ProductVariant})">
            <summary>
            Gets a list of variants, optionally filtered to a given product.
            </summary>
            <param name="productId">The ID of the product that the variants belong to. If null, all variants from all products will be returned.</param>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.ListAsync(System.Nullable{System.Int64},ShopifySharp.Filters.ProductVariantListFilter)">
            <summary>
            Gets a list of variants, optionally filtered to a given product.
            </summary>
            <param name="productId">The ID of the product that the variants belong to. If null, all variants from all products will be returned.</param>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ProductVariant"/> with the given id.
            </summary>
            <param name="variantId">The id of the product variant to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.CreateAsync(System.Int64,ShopifySharp.ProductVariant)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ProductVariant"/>.
            </summary>
            <param name="productId">The product that the new variant will belong to.</param>
            <param name="variant">A new <see cref="T:ShopifySharp.ProductVariant"/>. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.UpdateAsync(System.Int64,ShopifySharp.ProductVariant)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ProductVariant"/>.
            </summary>
            <param name="productVariantId">Id of the object being updated.</param>
            <param name="variant">The variant to update.</param>
        </member>
        <member name="M:ShopifySharp.ProductVariantService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes a product variant with the given Id.
            </summary>
            <param name="productId">The product that the variant belongs to.</param>
            <param name="variantId">The product variant's id.</param>
        </member>
        <member name="T:ShopifySharp.ProductService">
            <summary>
            A service for manipulating Shopify products.
            </summary>
        </member>
        <member name="M:ShopifySharp.ProductService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ProductService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ProductService.CountAsync(ShopifySharp.Filters.ProductCountFilter)">
            <summary>
            Gets a count of all of the shop's products.
            </summary>
            <returns>The count of all products for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ProductService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Product})">
            <summary>
            Gets a list of up to 250 of the shop's products.
            </summary>
        </member>
        <member name="M:ShopifySharp.ProductService.ListAsync(ShopifySharp.Filters.ProductListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's products.
            </summary>
        </member>
        <member name="M:ShopifySharp.ProductService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Product"/> with the given id.
            </summary>
            <param name="productId">The id of the product to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Product"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ProductService.CreateAsync(ShopifySharp.Product,ShopifySharp.ProductCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Product"/> on the store.
            </summary>
            <param name="product">A new <see cref="T:ShopifySharp.Product"/>. Id should be set to null.</param>
            <param name="options">Options for creating the product.</param>
            <returns>The new <see cref="T:ShopifySharp.Product"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ProductService.UpdateAsync(System.Int64,ShopifySharp.Product)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Product"/>.
            </summary>
            <param name="productId">Id of the object being updated.</param>
            <param name="product">The <see cref="T:ShopifySharp.Product"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Product"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ProductService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a product with the given Id.
            </summary>
            <param name="productId">The product object's Id.</param>
        </member>
        <member name="M:ShopifySharp.ProductService.PublishAsync(System.Int64)">
            <summary>
            Publishes an unpublished <see cref="T:ShopifySharp.Product"/>.
            </summary>
            <param name="id">The product's id.</param>
            <returns>The published <see cref="T:ShopifySharp.Product"/></returns>
        </member>
        <member name="M:ShopifySharp.ProductService.UnpublishAsync(System.Int64)">
            <summary>
            Unpublishes an published <see cref="T:ShopifySharp.Product"/>.
            </summary>
            <param name="id">The product's id.</param>
            <returns>The unpublished <see cref="T:ShopifySharp.Product"/></returns>
        </member>
        <member name="T:ShopifySharp.RecurringChargeService">
            <summary>
            A service for manipulating Shopify's RecurringApplicationCharge API.
            </summary>
        </member>
        <member name="M:ShopifySharp.RecurringChargeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.RecurringChargeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.RecurringChargeService.CreateAsync(ShopifySharp.RecurringCharge)">
            <summary>
            Creates a <see cref="T:ShopifySharp.RecurringCharge"/>.
            </summary>
            <param name="charge">The <see cref="T:ShopifySharp.RecurringCharge"/> to create.</param>
            <returns>The new <see cref="T:ShopifySharp.RecurringCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RecurringChargeService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.RecurringCharge"/> with the given id.
            </summary>
            <param name="id">The id of the charge to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.RecurringCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RecurringChargeService.ListAsync(ShopifySharp.Filters.RecurringChargeListFilter)">
            <summary>
            Retrieves a list of all past and present <see cref="T:ShopifySharp.RecurringCharge"/> objects.
            </summary>
        </member>
        <member name="M:ShopifySharp.RecurringChargeService.ActivateAsync(System.Int64)">
            <summary>
            Activates a <see cref="T:ShopifySharp.RecurringCharge"/> that the shop owner has accepted.
            </summary>
            <param name="id">The id of the charge to activate.</param>
        </member>
        <member name="M:ShopifySharp.RecurringChargeService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a <see cref="T:ShopifySharp.RecurringCharge"/>.
            </summary>
            <param name="id">The id of the charge to delete.</param>
        </member>
        <member name="T:ShopifySharp.RedirectService">
            <summary>
            A service for manipulating Shopify redirects.
            </summary>
        </member>
        <member name="M:ShopifySharp.RedirectService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.RedirectService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.RedirectService.CountAsync(ShopifySharp.Filters.RedirectCountFilter)">
            <summary>
            Gets a count of all of the shop's redirects.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.RedirectService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Redirect})">
            <summary>
            Gets a list of up to 250 of the shop's redirects.
            </summary>
        </member>
        <member name="M:ShopifySharp.RedirectService.ListAsync(ShopifySharp.Filters.RedirectListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's redirects.
            </summary>
        </member>
        <member name="M:ShopifySharp.RedirectService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Redirect"/> with the given id.
            </summary>
            <param name="redirectId">The id of the redirect to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Redirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RedirectService.CreateAsync(ShopifySharp.Redirect)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Redirect"/> on the store. The redirect always starts out with a role of
            "unpublished." If the redirect has a different role, it will be assigned that only after all of its
            files have been extracted and stored by Shopify (which might take a couple of minutes).
            </summary>
            <param name="redirect">The new <see cref="T:ShopifySharp.Redirect"/>.</param>
            <returns>The new <see cref="T:ShopifySharp.Redirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RedirectService.UpdateAsync(System.Int64,ShopifySharp.Redirect)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Redirect"/>.
            </summary>
            <param name="redirectId">Id of the object being updated.</param>
            <param name="redirect">The <see cref="T:ShopifySharp.Redirect"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Redirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RedirectService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a redirect with the given Id.
            </summary>
            <param name="redirectId">The redirect object's Id.</param>
        </member>
        <member name="T:ShopifySharp.RefundService">
            <summary>
            A service for creating Shopify Refunds.
            </summary>
        </member>
        <member name="M:ShopifySharp.RefundService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.RefundService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.RefundService.ListForOrderAsync(System.Int64,ShopifySharp.Filters.ListFilter{ShopifySharp.Refund})">
            <summary>
            Retrieves a list of refunds for an order.
            </summary>
            <param name="orderId">The id of the order to list orders for.</param>
        </member>
        <member name="M:ShopifySharp.RefundService.ListForOrderAsync(System.Int64,ShopifySharp.Filters.RefundListFilter)">
            <summary>
            Retrieves a list of refunds for an order.
            </summary>
            <param name="orderId">The id of the order to list orders for.</param>
        </member>
        <member name="M:ShopifySharp.RefundService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves a specific refund.
            </summary>
            <param name="orderId"></param>
            <param name="refundId"></param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.RefundService.CalculateAsync(System.Int64,ShopifySharp.Refund)">
            <summary>
            Calculates <see cref="T:ShopifySharp.Refund"/> transactions based on line items and shipping.
            When you want to create a refund, you should first use the calculate endpoint to generate accurate refund transactions.
            Specify the line items that are being refunded, their quantity and restock instructions, and whether you intend to refund shipping costs.
            If the restock instructions can't be met—for example, because you try to return more items than have been fulfilled—then the endpoint returns modified restock instructions.
            You can then use the response in the body of the request to create the actual refund.
            The response includes a transactions object with "kind": "suggested_refund", which must to be changed to "kind" : "refund" for the refund to be accepted.
            </summary>
        </member>
        <member name="M:ShopifySharp.RefundService.RefundAsync(System.Int64,ShopifySharp.Refund)">
            <summary>
            Creates a <see cref="T:ShopifySharp.Refund"/>. Use the calculate endpoint to produce the transactions to submit.
            </summary>
        </member>
        <member name="T:ShopifySharp.ScriptTagService">
            <summary>
            A service for manipulating Shopify's ScriptTag API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ScriptTagService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.CountAsync(ShopifySharp.Filters.ScriptTagCountFilter)">
            <summary>
            Gets a count of all of the shop's <see cref="T:ShopifySharp.ScriptTag"/>s.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.ScriptTag})">
            <summary>
            Gets a list of up to 250 of the shop's script tags.
            </summary>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.ListAsync(ShopifySharp.Filters.ScriptTagListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's script tags.
            </summary>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ScriptTag"/> with the given id.
            </summary>
            <param name="tagId">The id of the <see cref="T:ShopifySharp.ScriptTag"/> to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ScriptTag"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.CreateAsync(ShopifySharp.ScriptTag)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ScriptTag"/> on the store.
            </summary>
            <param name="tag">A new <see cref="T:ShopifySharp.ScriptTag"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.ScriptTag"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.UpdateAsync(System.Int64,ShopifySharp.ScriptTag)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ScriptTag"/>.
            </summary>
            <param name="scriptTagId">Id of the object being updated.</param>
            <param name="tag">The <see cref="T:ShopifySharp.ScriptTag"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ScriptTag"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ScriptTagService.DeleteAsync(System.Int64)">
            <summary>
            Deletes the <see cref="T:ShopifySharp.ScriptTag"/> with the given Id.
            </summary>
            <param name="tagId">The tag's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShippingZoneService">
            <summary>
            A service for retrieve Shopify shipping zones.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShippingZoneService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShippingZoneService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShippingZoneService.ListAsync(ShopifySharp.Filters.ShippingZoneListFilter)">
            <summary>
            Retrieves a list of all shipping zones. 
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPaymentsService">
            <summary>
            A service for manipulating Shopify payments.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyPaymentsService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyPaymentsService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyPaymentsService.IsShopifyPaymentApiEnabledAsync">
            <summary>
            Checks whether the Shopify Payments API is enabled on this store.
            If not enabled, all Shopify Payments API endpoints will return HTTP 404 / Not Found
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyPaymentsService.GetBalanceAsync">
            <summary>
            Gets a count of all of the shop's transactions.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <returns>The count of all fulfillments for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPaymentsService.ListPayoutsAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.ShopifyPaymentsPayout})">
            <summary>
            Retrieves a list of all payouts ordered by payout date, with the most recent being first.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyPaymentsService.ListPayoutsAsync(ShopifySharp.Filters.ShopifyPaymentsPayoutListFilter)">
            <summary>
            Retrieves a list of all payouts ordered by payout date, with the most recent being first.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyService.BuildShopUri(System.String,System.Boolean)">
            <summary>
            Attempts to build a shop API <see cref="T:System.Uri"/> for the given shop. Will throw a <see cref="T:ShopifySharp.ShopifyException"/> if the URL cannot be formatted.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <exception cref="T:ShopifySharp.ShopifyException">Thrown if the given URL cannot be converted into a well-formed URI.</exception>
            <returns>The shop's API <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyService.SetExecutionPolicy(ShopifySharp.IRequestExecutionPolicy)">
            <summary>
            Sets the execution policy for this instance only. This policy will always be used over the global execution policy.
            The instance will revert back to the global execution policy if you pass null to this method.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyService.SetGlobalExecutionPolicy(ShopifySharp.IRequestExecutionPolicy)">
            <summary>
            Sets the global execution policy for all *new* instances. Current instances are unaffected, but you can call .SetExecutionPolicy on them.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyService.PrepareRequestMessage(ShopifySharp.Infrastructure.RequestUri,System.Net.Http.HttpMethod,System.Net.Http.HttpContent)">
            <summary>
            Prepares a request to the path and appends the shop's access token header if applicable.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyService.ReadLinkHeader(System.Net.Http.HttpResponseMessage)">
            <summary>
            Attempts to parse the Link header from a web response. Returns either the header value or null if it does not exist.
            </summary>
            <remarks>
            The Link header only exists on list requests. 
            </remarks>
        </member>
        <member name="M:ShopifySharp.ShopifyService.ExecuteRequestAsync(ShopifySharp.Infrastructure.RequestUri,System.Net.Http.HttpMethod,System.Net.Http.HttpContent)">
            <summary>
            Executes a request and returns a JToken for querying. Throws an exception when the response is invalid.
            Use this method when the expected response is a single line or simple object that doesn't warrant its own class.
            </summary>
            <remarks>
            This method will automatically dispose the <paramref name="baseClient"/> and <paramref name="content" /> when finished.
            </remarks>
        </member>
        <member name="M:ShopifySharp.ShopifyService.ExecuteRequestAsync``1(ShopifySharp.Infrastructure.RequestUri,System.Net.Http.HttpMethod,System.Net.Http.HttpContent,System.String)">
            <summary>
            Executes a request and returns the given type. Throws an exception when the response is invalid.
            Use this method when the expected response is a single line or simple object that doesn't warrant its own class.
            </summary>
            <remarks>
            This method will automatically dispose the <paramref name="baseRequestMessage" /> when finished.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ShopifySharp.ShopifyService.CheckResponseExceptions(System.Net.Http.HttpResponseMessage,System.String)" -->
        <member name="M:ShopifySharp.ShopifyService.TryParseErrorJson(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Attempts to parse a JSON string for Shopify API errors. Returns false if the string cannot be parsed or contains no errors. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ShopifySharp.ShopifyService.ParseLinkHeaderToListResult``1(ShopifySharp.RequestResult{System.Collections.Generic.List{``0}})" -->
        <member name="M:ShopifySharp.ShopService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopService.GetAsync">
            <summary>
            Gets the shop's data.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopService.UninstallAppAsync">
            <summary>
            Forces the shop to uninstall your Shopify app. Uninstalling an application is an irreversible operation. Be entirely sure that you no longer need to make API calls for the shop in which the application has been installed.
            </summary>
        </member>
        <member name="T:ShopifySharp.SmartCollectionService">
            <summary>
            A service for manipulating Shopify's smart collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.SmartCollectionService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.CountAsync(ShopifySharp.Filters.SmartCollectionCountFilter)">
            <summary>
            Gets a count of all smart collections on the store.
            </summary>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.SmartCollection})">
            <summary>
            Gets a list of up to 250 smart collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.ListAsync(ShopifySharp.Filters.SmartCollectionListFilter)">
            <summary>
            Gets a list of up to 250 smart collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.SmartCollection"/> with the given id.
            </summary>
            <param name="collectionId">The id of the smart collection to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.CreateAsync(ShopifySharp.SmartCollection,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.SmartCollection"/>.
            </summary>
            <param name="collection">A new <see cref="T:ShopifySharp.SmartCollection"/>. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.UpdateAsync(System.Int64,ShopifySharp.SmartCollection)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.SmartCollection"/>.
            </summary>
            <param name="smartCollectionId">Id of the object being updated.</param>
            <param name="collection">The smart collection to update.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.PublishAsync(System.Int64)">
            <summary>
            Publishes an unpublished smart collection.
            </summary>
            <param name="smartCollectionId">The collection's id.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.UnpublishAsync(System.Int64)">
            <summary>
            Publishes an unpublished smart collection.
            </summary>
            <param name="smartCollectionId">The collection's id.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.UpdateProductOrderAsync(System.Int64,System.String,System.Int64[])">
            <summary>
            Updates the order of products when a SmartCollection's sort-by method is set to "manual".
            </summary>
            <param name="smartCollectionId">Id of the object being updated.</param>
            <param name="sortOrder">The order in which products in the smart collection appear. Note that specifying productIds parameter will have no effect unless the sort order is "manual"</param>
            <param name="productIds">An array of product ids sorted in the order you want them to appear in.</param>
        </member>
        <member name="M:ShopifySharp.SmartCollectionService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a smart collection with the given Id.
            </summary>
            <param name="collectionId">The smart collection's id.</param>
        </member>
        <member name="T:ShopifySharp.ThemeService">
            <summary>
            A service for manipulating Shopify themes.
            </summary>
        </member>
        <member name="M:ShopifySharp.ThemeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ThemeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ThemeService.ListAsync(ShopifySharp.Filters.ThemeListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's themes.
            </summary>
        </member>
        <member name="M:ShopifySharp.ThemeService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Theme"/> with the given id.
            </summary>
            <param name="themeId">The id of the theme to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Theme"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ThemeService.CreateAsync(ShopifySharp.Theme)">
            <summary>
            Creates a new theme on the store. The theme always starts out with a role of
            "unpublished." If the theme has a different role, it will be assigned that only after all of its
            files have been extracted and stored by Shopify (which might take a couple of minutes).
            </summary>
            <param name="theme">The new theme.</param>
            <param name="sourceUrl">A URL that points to the .zip file containing the theme's source files.</param>
        </member>
        <member name="M:ShopifySharp.ThemeService.CreateAsync(ShopifySharp.Theme,System.String)">
            <summary>
            Creates a new theme on the store. The theme always starts out with a role of
            "unpublished." If the theme has a different role, it will be assigned that only after all of its
            files have been extracted and stored by Shopify (which might take a couple of minutes).
            </summary>
            <param name="theme">The new theme.</param>
            <param name="sourceUrl">A URL that points to the .zip file containing the theme's source files.</param>
        </member>
        <member name="M:ShopifySharp.ThemeService.UpdateAsync(System.Int64,ShopifySharp.Theme)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Theme"/>.
            </summary>
            <param name="themeId">Id of the object being updated.</param>
            <param name="theme">The <see cref="T:ShopifySharp.Theme"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Theme"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ThemeService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a Theme with the given Id.
            </summary>
            <param name="themeId">The Theme object's Id.</param>
        </member>
        <member name="T:ShopifySharp.TransactionService">
            <summary>
            A service for manipulating Shopify transactions.
            </summary>
        </member>
        <member name="M:ShopifySharp.TransactionService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.TransactionService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.TransactionService.CountAsync(System.Int64)">
            <summary>
            Gets a count of all of the shop's transactions.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <remarks>
            According to Shopify's documentation, this endpoint does not currently support any additional filter parameters for counting.
            </remarks>
        </member>
        <member name="M:ShopifySharp.TransactionService.ListAsync(System.Int64,ShopifySharp.Filters.TransactionListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's transactions.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.TransactionService.GetAsync(System.Int64,System.Int64,ShopifySharp.Filters.TransactionGetFilter)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Transaction"/> with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="transactionId">The id of the Transaction to retrieve.</param>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.TransactionService.CreateAsync(System.Int64,ShopifySharp.Transaction)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Transaction"/> of the given kind.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="transaction">The transaction.</param>
            <returns>The new <see cref="T:ShopifySharp.Transaction"/>.</returns>
        </member>
        <member name="T:ShopifySharp.UsageChargeService">
            <summary>
            A service for manipulating Shopify's UsageCharge API.
            </summary>
        </member>
        <member name="M:ShopifySharp.UsageChargeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.UsageChargeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.UsageChargeService.CreateAsync(System.Int64,System.String,System.Decimal)">
            <summary>
            Creates a <see cref="T:ShopifySharp.UsageCharge"/>.
            </summary>
            <param name="recurringChargeId">The id of the <see cref="T:ShopifySharp.UsageCharge"/> that this usage charge belongs to.</param>
            <param name="description">The name or description of the usage charge.</param>
            <param name="price">The price of the usage charge.</param>
            <returns>The new <see cref="T:ShopifySharp.UsageCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.UsageChargeService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.UsageCharge"/> with the given id.
            </summary>
            <param name="recurringChargeId">The id of the recurring charge that this usage charge belongs to.</param>
            <param name="id">The id of the charge to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.UsageCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.UsageChargeService.ListAsync(System.Int64,ShopifySharp.Filters.UsageChargeListFilter)">
            <summary>
            Retrieves a list of all past and present <see cref="T:ShopifySharp.UsageCharge"/> objects.
            </summary>
            <param name="recurringChargeId">The id of the recurring charge that these usage charges belong to.</param>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="T:ShopifySharp.UserService">
            <summary>
            A service for manipulating Shopify users.
            </summary>
        </member>
        <member name="M:ShopifySharp.UserService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.UserService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.UserService.ListAsync">
            <summary>
            Gets all the users.
            </summary>
        </member>
        <member name="M:ShopifySharp.UserService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.User"/> with the given id.
            </summary>
            <param name="userId">The id of the User to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.User"/>.</returns>
        </member>
        <member name="M:ShopifySharp.UserService.GetCurrentAsync">
            <summary>
            Retrieves the current logged-in <see cref="T:ShopifySharp.User"/> (useful only when the access token was created for a specific user of the shop).
            </summary>
            <returns>The <see cref="T:ShopifySharp.User"/>.</returns>
        </member>
        <member name="T:ShopifySharp.WebhookService">
            <summary>
            A service for manipulating Shopify webhooks.
            </summary>
        </member>
        <member name="M:ShopifySharp.WebhookService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.WebhookService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.WebhookService.CountAsync(ShopifySharp.Filters.WebhookCountFilter)">
            <summary>
            Gets a count of all of the shop's webhooks.
            </summary>
            <param name="filter">Options for filtering the result.</param>
            <returns>The count of all webhooks for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.WebhookService.ListAsync(ShopifySharp.Filters.ListFilter{ShopifySharp.Webhook})">
            <summary>
            Gets a list of up to 250 of the shop's webhooks.
            </summary>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.WebhookService.ListAsync(ShopifySharp.Filters.WebhookListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's webhooks.
            </summary>
            <param name="filter">Options for filtering the list.</param>
        </member>
        <member name="M:ShopifySharp.WebhookService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.Webhook"/> with the given id.
            </summary>
            <param name="webhookId">The id of the webhook to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.Webhook"/>.</returns>
        </member>
        <member name="M:ShopifySharp.WebhookService.CreateAsync(ShopifySharp.Webhook)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.Webhook"/> on the store.
            </summary>
            <param name="webhook">A new <see cref="T:ShopifySharp.Webhook"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.Webhook"/>.</returns>
        </member>
        <member name="M:ShopifySharp.WebhookService.UpdateAsync(System.Int64,ShopifySharp.Webhook)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.Webhook"/>.
            </summary>
            <param name="webhookId">Id of the object being updated.</param>
            <param name="webhook">The <see cref="T:ShopifySharp.Webhook"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.Webhook"/>.</returns>
        </member>
        <member name="M:ShopifySharp.WebhookService.DeleteAsync(System.Int64)">
            <summary>
            Deletes the webhook with the given Id.
            </summary>
            <param name="webhookId">The order object's Id.</param>
        </member>
    </members>
</doc>
